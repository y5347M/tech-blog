[{"data":1,"prerenderedAt":35},["ShallowReactive",2],{"useQiitaArticleDetailFetcher-2218c3381118e015ecc5":3,"useQiitaAuthorizedUser":32},{"rendered_body":4,"body":5,"coediting":6,"comments_count":7,"created_at":8,"group":9,"id":10,"likes_count":7,"private":6,"reactions_count":7,"stocks_count":7,"tags":11,"title":18,"updated_at":8,"url":19,"user":20,"page_views_count":31,"team_membership":9,"organization_url_name":9,"slide":6},"\u003Ch1 data-sourcepos=\"1:1-1:8\">\n\u003Cspan id=\"前提\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%89%8D%E6%8F%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>前提\u003C/h1>\n\u003Cp data-sourcepos=\"2:1-2:69\">前回に引き続きチュートリアルを実施してみます。\u003C/p>\n\u003Cp data-sourcepos=\"4:1-4:51\">\u003Ciframe id=\"qiita-embed-content__c94604bd81f47809771f96acb5b3bb5c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c94604bd81f47809771f96acb5b3bb5c\" data-content=\"https%3A%2F%2Fqiita.com%2Fy5347M%2Fitems%2F203a2b2fc3532bf9699f\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Cp data-sourcepos=\"6:1-6:141\">コーディングルールがわからないときはこちらを参照。（間違っていたら指摘いただけると幸いです。）\u003C/p>\n\u003Cp data-sourcepos=\"8:1-8:69\">\u003Ciframe id=\"qiita-embed-content__1ac7c48af1eb22c15066b663006a3377\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1ac7c48af1eb22c15066b663006a3377\" data-content=\"https%3A%2F%2Frunebook.dev%2Fja%2Fdocs%2Fkotlin%2Fdocs%2Freference%2Fcoding-conventions\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Ch1 data-sourcepos=\"10:1-10:8\">\n\u003Cspan id=\"環境\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E7%92%B0%E5%A2%83\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>環境\u003C/h1>\n\u003Cul data-sourcepos=\"11:1-16:0\">\n\u003Cli data-sourcepos=\"11:1-11:15\">macOS: 11.6.4\u003C/li>\n\u003Cli data-sourcepos=\"12:1-12:45\">IntelliJ IDEA: 2021.2.3 (Community Edition)\u003C/li>\n\u003Cli data-sourcepos=\"13:1-13:38\">Kotlin: 212-1.5.10-release-IJ5457.46\u003C/li>\n\u003Cli data-sourcepos=\"14:1-14:15\">Gradle: 7.4.1\u003C/li>\n\u003Cli data-sourcepos=\"15:1-16:0\">Java: temurin 17.0.3\u003C/li>\n\u003C/ul>\n\u003Ch1 data-sourcepos=\"17:1-17:8\">\n\u003Cspan id=\"手順\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%89%8B%E9%A0%86\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>手順\u003C/h1>\n\u003Ch2 data-sourcepos=\"18:1-18:33\">\n\u003Cspan id=\"ブログエンジンを実装\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%96%E3%83%AD%E3%82%B0%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>ブログエンジンを実装\u003C/h2>\n\u003Ch4 data-sourcepos=\"19:1-19:48\">\n\u003Cspan id=\"blog-mustache-テンプレートを更新\" class=\"fragment\">\u003C/span>\u003Ca href=\"#blog-mustache-%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%92%E6%9B%B4%E6%96%B0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>\"blog\" Mustache テンプレートを更新\u003C/h4>\n\u003Cp data-sourcepos=\"20:1-20:44\">\u003Ccode>src/main/resources/templates/blog.mustache\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"mustache\" data-sourcepos=\"21:1-42:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">blog.mustache\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">header\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\n\u003Cspan class=\"nt\">&lt;h1&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/h1&gt;\u003C/span>\n\n\u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"articles\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n\n  \u003Cspan class=\"k\">{{#\u003C/span>\u003Cspan class=\"nn\">articles\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n    \u003Cspan class=\"nt\">&lt;section&gt;\u003C/span>\n      \u003Cspan class=\"nt\">&lt;header\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-header\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n        \u003Cspan class=\"nt\">&lt;h2\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-title\"\u003C/span>\u003Cspan class=\"nt\">&gt;&lt;a\u003C/span> \u003Cspan class=\"na\">href=\u003C/span>\u003Cspan class=\"s\">\"/article/\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">slug\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"s\">\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/a&gt;&lt;/h2&gt;\u003C/span>\n        \u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-meta\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>By  \u003Cspan class=\"nt\">&lt;strong&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">author\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">firstname\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/strong&gt;\u003C/span>, on \u003Cspan class=\"nt\">&lt;strong&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">addedAt\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/strong&gt;&lt;/div&gt;\u003C/span>\n      \u003Cspan class=\"nt\">&lt;/header&gt;\u003C/span>\n      \u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-description\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n        \u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">headline\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n      \u003Cspan class=\"nt\">&lt;/div&gt;\u003C/span>\n    \u003Cspan class=\"nt\">&lt;/section&gt;\u003C/span>\n  \u003Cspan class=\"k\">{{/\u003C/span>\u003Cspan class=\"nn\">articles\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\u003Cspan class=\"nt\">&lt;/div&gt;\u003C/span>\n\n\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">footer\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"43:1-43:29\">\n\u003Cspan id=\"新しい記事を作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%96%B0%E3%81%97%E3%81%84%E8%A8%98%E4%BA%8B%E3%82%92%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>新しい記事を作成\u003C/h4>\n\u003Cp data-sourcepos=\"44:1-44:47\">\u003Ccode>src/main/resources/templates/article.mustache\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"mustache\" data-sourcepos=\"45:1-62:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">article.mustache\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">header\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\n\u003Cspan class=\"nt\">&lt;section\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n  \u003Cspan class=\"nt\">&lt;header\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-header\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n    \u003Cspan class=\"nt\">&lt;h1\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-title\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">article\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/h1&gt;\u003C/span>\n    \u003Cspan class=\"nt\">&lt;p\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-meta\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>By  \u003Cspan class=\"nt\">&lt;strong&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">article\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">author\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">firstname\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/strong&gt;\u003C/span>, on \u003Cspan class=\"nt\">&lt;strong&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">article\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">addedAt\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/strong&gt;&lt;/p&gt;\u003C/span>\n  \u003Cspan class=\"nt\">&lt;/header&gt;\u003C/span>\n\n  \u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-description\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n    \u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">article\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">headline\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\n    \u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">article\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">content\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n  \u003Cspan class=\"nt\">&lt;/div&gt;\u003C/span>\n\u003Cspan class=\"nt\">&lt;/section&gt;\u003C/span>\n\n\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">footer\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"64:1-64:24\">\n\u003Cspan id=\"controllerを更新\" class=\"fragment\">\u003C/span>\u003Ca href=\"#controller%E3%82%92%E6%9B%B4%E6%96%B0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>Controllerを更新\u003C/h4>\n\u003Cp data-sourcepos=\"65:1-66:61\">このコントローラーは単一のコンストラクター（暗黙的な\u003Ccode>@Autowired\u003C/code>）があるので、\u003Ccode>ArticleRepository\u003C/code>と\u003Ccode>MarkdownConverter\u003C/code>のコンストラクターのパラメーターは自動的にAutrowiredされるそうです。\u003Cbr>\n（\u003Ccode>MarkdownConverter\u003C/code>ってどこのことでしょう…）\u003C/p>\n\u003Cp data-sourcepos=\"68:1-68:52\">\u003Ccode>src/main/kotlin/com/example/blog/HtmlController.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"69:1-119:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">HtmlController.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.blog\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.http.HttpStatus\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.stereotype.Controller\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.ui.Model\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.ui.set\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.web.bind.annotation.GetMapping\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.web.bind.annotation.PathVariable\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.web.server.ResponseStatusException\u003C/span>\n\n\u003Cspan class=\"nd\">@Controller\u003C/span>\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">HtmlController\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"k\">private\u003C/span> \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">repository\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">ArticleRepository\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@GetMapping\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"/\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">blog\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">Model\u003C/span>\u003Cspan class=\"p\">):\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"title\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"Blog\"\u003C/span>\n        \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"articles\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">repository\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">findAllByOrderByAddedAtDesc\u003C/span>\u003Cspan class=\"p\">().\u003C/span>\u003Cspan class=\"nf\">map\u003C/span> \u003Cspan class=\"p\">{\u003C/span> \u003Cspan class=\"n\">it\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">render\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">}\u003C/span>\n        \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"s\">\"blog\"\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n    \u003Cspan class=\"nd\">@GetMapping\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"/article/{slug}\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">article\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nd\">@PathVariable\u003C/span> \u003Cspan class=\"n\">slug\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">Model\u003C/span>\u003Cspan class=\"p\">):\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">article\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">repository\u003C/span>\n                \u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">findBySlug\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">slug\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n                \u003Cspan class=\"o\">?.\u003C/span>\u003Cspan class=\"nf\">render\u003C/span>\u003Cspan class=\"p\">()\u003C/span>\n                \u003Cspan class=\"o\">?:\u003C/span> \u003Cspan class=\"k\">throw\u003C/span> \u003Cspan class=\"nc\">ResponseStatusException\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">HttpStatus\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">NOT_FOUND\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"s\">\"This article does not exist\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"title\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">article\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">title\u003C/span>\n        \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"article\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">article\u003C/span>\n        \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"s\">\"article\"\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nc\">Article\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">render\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"nc\">RenderedArticle\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\n            \u003Cspan class=\"n\">slug\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"n\">title\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"n\">headline\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"n\">content\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"n\">author\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"n\">addedAt\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">format\u003C/span>\u003Cspan class=\"p\">()\u003C/span>\n    \u003Cspan class=\"p\">)\u003C/span>\n\n    \u003Cspan class=\"kd\">data class\u003C/span> \u003Cspan class=\"nc\">RenderedArticle\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\n            \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">slug\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">title\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">headline\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">content\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">author\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">ArticleUser\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n            \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">addedAt\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"121:1-121:29\">\n\u003Cspan id=\"初期データを登録\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%88%9D%E6%9C%9F%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E7%99%BB%E9%8C%B2\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>初期データを登録\u003C/h4>\n\u003Cp data-sourcepos=\"122:1-122:55\">\u003Ccode>src/main/kotlin/com/example/blog/BlogConfiguration.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"123:1-152:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">BlogConfiguration.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.blog\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.ApplicationRunner\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.context.annotation.Bean\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.context.annotation.Configuration\u003C/span>\n\n\u003Cspan class=\"nd\">@Configuration\u003C/span>\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">BlogConfiguration\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@Bean\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">databaseInitializer\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">articleUserRepository\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">ArticleUserRepository\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n                            \u003Cspan class=\"n\">articleRepository\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">ArticleRepository\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"nc\">ApplicationRunner\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n        \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">smaldini\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">articleUserRepository\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">save\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">ArticleUser\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"smaldini\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"s\">\"Stéphane\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"s\">\"Maldini\"\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n        \u003Cspan class=\"n\">articleRepository\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">save\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">Article\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\n                \u003Cspan class=\"n\">title\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"Reactor Bismuth is out\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n                \u003Cspan class=\"n\">headline\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"Lorem ipsum\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n                \u003Cspan class=\"n\">content\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"dolor sit amet\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n                \u003Cspan class=\"n\">author\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">smaldini\u003C/span>\n        \u003Cspan class=\"p\">))\u003C/span>\n        \u003Cspan class=\"n\">articleRepository\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">save\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">Article\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\n                \u003Cspan class=\"n\">title\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"Reactor Aluminium has landed\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n                \u003Cspan class=\"n\">headline\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"Lorem ipsum\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n                \u003Cspan class=\"n\">content\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"dolor sit amet\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\n                \u003Cspan class=\"n\">author\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">smaldini\u003C/span>\n        \u003Cspan class=\"p\">))\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"154:1-154:29\">\n\u003Cspan id=\"統合テストの更新\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E7%B5%B1%E5%90%88%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E6%9B%B4%E6%96%B0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>統合テストの更新\u003C/h4>\n\u003Cp data-sourcepos=\"155:1-155:54\">\u003Ccode>src/test/kotlin/com/example/blog/IntegrationTests.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"156:1-200:3\">\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>package com.example.blog\n\nimport org.assertj.core.api.Assertions.assertThat\nimport org.junit.jupiter.api.AfterAll\nimport org.junit.jupiter.api.BeforeAll\nimport org.junit.jupiter.api.Test\nimport org.springframework.beans.factory.annotation.Autowired\nimport org.springframework.boot.test.context.SpringBootTest\nimport org.springframework.boot.test.web.client.TestRestTemplate\nimport org.springframework.boot.test.web.client.getForEntity\nimport org.springframework.http.HttpStatus\n\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\nclass IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {\n\n    @BeforeAll\n    fun setup() {\n        println(\"&gt;&gt; Setup\")\n    }\n\n    @Test\n    fun `Assert blog page title, content and status code`() {\n        println(\"&gt;&gt; Assert blog page title, content and status code\")\n        val entity = restTemplate.getForEntity&lt;String&gt;(\"/\")\n        assertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n        assertThat(entity.body).contains(\"&lt;h1&gt;Blog&lt;/h1&gt;\", \"Reactor\")\n    }\n\n    @Test\n    fun `Assert article page title, content and status code`() {\n        println(\"&gt;&gt; Assert article page title, content and status code\")\n        val title = \"Reactor Aluminium has landed\"\n        val entity = restTemplate.getForEntity&lt;String&gt;(\"/article/${title.toSlug()}\")\n        assertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n        assertThat(entity.body).contains(title, \"Lorem ipsum\", \"dolor sit amet\")\n    }\n\n    @AfterAll\n    fun teardown() {\n        println(\"&gt;&gt; Tear down\")\n    }\n\n}\n\u003C/code>\u003C/pre>\u003C/div>\u003C/div>\n\u003Cp data-sourcepos=\"202:1-205:139\">アプリケーションを起動して、\u003Ca href=\"http://localhost:8080/\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:8080\u003C/a>にアクセスします。初期化データが投入されています。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Fd0ac4c91-b31c-8efb-d6ff-4eb26a5bbc3c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fa3402cfcad554e58d6edf18ed274094\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Fd0ac4c91-b31c-8efb-d6ff-4eb26a5bbc3c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=fa3402cfcad554e58d6edf18ed274094\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Fd0ac4c91-b31c-8efb-d6ff-4eb26a5bbc3c.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=048b63cbf264b912121b7cdd13a29602 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/d0ac4c91-b31c-8efb-d6ff-4eb26a5bbc3c.png\" loading=\"lazy\">\u003C/a>\u003Cbr>\nリンクになっているところをクリックします。記事が参照できるようになっています。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F56fd3136-17f1-7cf8-6dab-07ab431bfdf9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eacc60ddcb085233ca6ec83b267caef6\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F56fd3136-17f1-7cf8-6dab-07ab431bfdf9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eacc60ddcb085233ca6ec83b267caef6\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F56fd3136-17f1-7cf8-6dab-07ab431bfdf9.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f62c2416998a4e49ce9ee53c8e7004ea 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/56fd3136-17f1-7cf8-6dab-07ab431bfdf9.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch2 data-sourcepos=\"208:1-208:24\">\n\u003Cspan id=\"構成プロパティ\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%A7%8B%E6%88%90%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>構成プロパティ\u003C/h2>\n\u003Cp data-sourcepos=\"209:1-209:262\">引用：\u003Ccode>Kotlin では、アプリケーションプロパティを管理するための推奨される方法は、@ConfigurationProperties を @ConstructorBinding と組み合わせて、読み取り専用プロパティを使用できるようにすること\u003C/code>\u003C/p>\n\u003Cp data-sourcepos=\"211:1-211:18\">だそうです。\u003C/p>\n\u003Ch4 data-sourcepos=\"212:1-212:29\">\n\u003Cspan id=\"プロパティの用意\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%81%AE%E7%94%A8%E6%84%8F\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>プロパティの用意\u003C/h4>\n\u003Cp data-sourcepos=\"213:1-213:52\">\u003Ccode>src/main/kotlin/com/example/blog/BlogProperties.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"214:1-225:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">BlogProperties.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.blog\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.context.properties.ConfigurationProperties\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.context.properties.ConstructorBinding\u003C/span>\n\n\u003Cspan class=\"nd\">@ConstructorBinding\u003C/span>\n\u003Cspan class=\"nd\">@ConfigurationProperties\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"blog\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"kd\">data class\u003C/span> \u003Cspan class=\"nc\">BlogProperties\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"kd\">var\u003C/span> \u003Cspan class=\"py\">title\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">banner\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">Banner\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"kd\">data class\u003C/span> \u003Cspan class=\"nc\">Banner\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">title\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">?\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"k\">null\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">content\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"227:1-227:74\">\n\u003Cspan id=\"アプリケーションレベルでプロパティを有効にする\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%AC%E3%83%99%E3%83%AB%E3%81%A7%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>アプリケーションレベルでプロパティを有効にする\u003C/h4>\n\u003Cp data-sourcepos=\"228:1-228:53\">\u003Ccode>src/main/kotlin/com/example/blog/BlogApplication.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"229:1-243:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">BlogApplication.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.blog\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.autoconfigure.SpringBootApplication\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.context.properties.EnableConfigurationProperties\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.runApplication\u003C/span>\n\n\u003Cspan class=\"nd\">@SpringBootApplication\u003C/span>\n\u003Cspan class=\"nd\">@EnableConfigurationProperties\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">BlogProperties\u003C/span>\u003Cspan class=\"o\">::\u003C/span>\u003Cspan class=\"k\">class\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">BlogApplication\u003C/span>\n\n\u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">main\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">args\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">Array\u003C/span>\u003Cspan class=\"p\">&lt;\u003C/span>\u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">&gt;)\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"n\">runApplication\u003C/span>\u003Cspan class=\"p\">&lt;\u003C/span>\u003Cspan class=\"nc\">BlogApplication\u003C/span>\u003Cspan class=\"p\">&gt;(*\u003C/span>\u003Cspan class=\"n\">args\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"245:1-245:30\">\n\u003Cspan id=\"buildgradlektsの更新\" class=\"fragment\">\u003C/span>\u003Ca href=\"#buildgradlekts%E3%81%AE%E6%9B%B4%E6%96%B0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>build.gradle.ktsの更新\u003C/h4>\n\u003Cp data-sourcepos=\"246:1-247:18\">カスタムプロパティをIDEに認識させるために、\u003Ccode>spring-boot-configuration-processor\u003C/code>依存関係でkapt を構成する必要があります。\u003Cbr>\n\u003Ccode>build.gradle.kts\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"248:1-258:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">build.gradle.kts\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"nf\">plugins\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n  \u003Cspan class=\"o\">..\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\n  \u003Cspan class=\"nf\">kotlin\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"kapt\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"n\">version\u003C/span> \u003Cspan class=\"s\">\"1.4.32\"\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"nf\">dependencies\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n  \u003Cspan class=\"o\">..\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\n  \u003Cspan class=\"nf\">kapt\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"org.springframework.boot:spring-boot-configuration-processor\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"260:1-260:36\">\n\u003Cspan id=\"applicationpropertiesの更新\" class=\"fragment\">\u003C/span>\u003Ca href=\"#applicationproperties%E3%81%AE%E6%9B%B4%E6%96%B0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>application.propertiesの更新\u003C/h4>\n\u003Cdiv class=\"code-frame\" data-lang=\"properties\" data-sourcepos=\"261:1-265:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">application.properties\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"py\">blog.title\u003C/span>\u003Cspan class=\"p\">=\u003C/span>\u003Cspan class=\"s\">Blog\u003C/span>\n\u003Cspan class=\"py\">blog.banner.title\u003C/span>\u003Cspan class=\"p\">=\u003C/span>\u003Cspan class=\"s\">Warning\u003C/span>\n\u003Cspan class=\"py\">blog.banner.content\u003C/span>\u003Cspan class=\"p\">=\u003C/span>\u003Cspan class=\"s\">The blog will be down tomorrow.\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"267:1-267:51\">せっかくなのでyml形式にしてみます。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"yml\" data-sourcepos=\"268:1-274:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">application.yml\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"na\">blog\u003C/span>\u003Cspan class=\"pi\">:\u003C/span>\n  \u003Cspan class=\"na\">title\u003C/span>\u003Cspan class=\"pi\">:\u003C/span> \u003Cspan class=\"s\">Blog\u003C/span>\n  \u003Cspan class=\"na\">banner\u003C/span>\u003Cspan class=\"pi\">:\u003C/span>\n    \u003Cspan class=\"na\">title\u003C/span>\u003Cspan class=\"pi\">:\u003C/span> \u003Cspan class=\"s\">Warning\u003C/span>\n    \u003Cspan class=\"na\">content\u003C/span>\u003Cspan class=\"pi\">:\u003C/span> \u003Cspan class=\"s\">The blog will be down tomorrow.\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"276:1-276:32\">\n\u003Cspan id=\"テンプレートの更新\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%AE%E6%9B%B4%E6%96%B0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テンプレートの更新\u003C/h4>\n\u003Cp data-sourcepos=\"277:1-277:44\">\u003Ccode>src/main/resources/templates/blog.mustache\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"mustache\" data-sourcepos=\"278:1-312:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">blog.mustache\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">header\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\n\u003Cspan class=\"nt\">&lt;h1&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/h1&gt;\u003C/span>\n\n\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">header\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\n\u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"articles\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n\n  \u003Cspan class=\"k\">{{#\u003C/span>\u003Cspan class=\"nn\">banner\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n  \u003Cspan class=\"nt\">&lt;section&gt;\u003C/span>\n    \u003Cspan class=\"nt\">&lt;header\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"banner\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n      \u003Cspan class=\"nt\">&lt;h2\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"banner-title\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">banner\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/h2&gt;\u003C/span>\n    \u003Cspan class=\"nt\">&lt;/header&gt;\u003C/span>\n    \u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"banner-content\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n      \u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">banner\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">content\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n    \u003Cspan class=\"nt\">&lt;/div&gt;\u003C/span>\n  \u003Cspan class=\"nt\">&lt;/section&gt;\u003C/span>\n  \u003Cspan class=\"k\">{{/\u003C/span>\u003Cspan class=\"nn\">banner\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\n  \u003Cspan class=\"k\">{{#\u003C/span>\u003Cspan class=\"nn\">articles\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n    \u003Cspan class=\"nt\">&lt;section&gt;\u003C/span>\n      \u003Cspan class=\"nt\">&lt;header\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-header\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n        \u003Cspan class=\"nt\">&lt;h2\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-title\"\u003C/span>\u003Cspan class=\"nt\">&gt;&lt;a\u003C/span> \u003Cspan class=\"na\">href=\u003C/span>\u003Cspan class=\"s\">\"/article/\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">slug\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"s\">\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/a&gt;&lt;/h2&gt;\u003C/span>\n        \u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-meta\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>By  \u003Cspan class=\"nt\">&lt;strong&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">author\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nv\">firstname\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/strong&gt;\u003C/span>, on \u003Cspan class=\"nt\">&lt;strong&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">addedAt\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/strong&gt;&lt;/div&gt;\u003C/span>\n      \u003Cspan class=\"nt\">&lt;/header&gt;\u003C/span>\n      \u003Cspan class=\"nt\">&lt;div\u003C/span> \u003Cspan class=\"na\">class=\u003C/span>\u003Cspan class=\"s\">\"article-description\"\u003C/span>\u003Cspan class=\"nt\">&gt;\u003C/span>\n        \u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">headline\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n      \u003Cspan class=\"nt\">&lt;/div&gt;\u003C/span>\n    \u003Cspan class=\"nt\">&lt;/section&gt;\u003C/span>\n  \u003Cspan class=\"k\">{{/\u003C/span>\u003Cspan class=\"nn\">articles\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\u003Cspan class=\"nt\">&lt;/div&gt;\u003C/span>\n\n\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">footer\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"313:1-313:35\">\n\u003Cspan id=\"コントローラーの更新\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%BC%E3%81%AE%E6%9B%B4%E6%96%B0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>コントローラーの更新\u003C/h4>\n\u003Cp data-sourcepos=\"314:1-314:87\">クラスの引数にBlogPropertiesの追加、blog関数の処理を更新します。\u003C/p>\n\u003Cp data-sourcepos=\"316:1-316:52\">\u003Ccode>src/main/kotlin/com/example/blog/HtmlController.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"317:1-330:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">HtmlController.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"nd\">@Controller\u003C/span>\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">HtmlController\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"k\">private\u003C/span> \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">repository\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">ArticleRepository\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"k\">private\u003C/span> \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">properties\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">BlogProperties\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@GetMapping\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"/\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">blog\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">Model\u003C/span>\u003Cspan class=\"p\">):\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"title\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">properties\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">title\u003C/span>\n        \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"banner\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">properties\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">banner\u003C/span>\n        \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"articles\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">repository\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">findAllByOrderByAddedAtDesc\u003C/span>\u003Cspan class=\"p\">().\u003C/span>\u003Cspan class=\"nf\">map\u003C/span> \u003Cspan class=\"p\">{\u003C/span> \u003Cspan class=\"n\">it\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">render\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">}\u003C/span>\n        \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"s\">\"blog\"\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n  \u003Cspan class=\"err\">・・・\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"332:1-333:139\">アプリケーションをリフレッシュし直して再度\u003Ca href=\"http://localhost:8080/\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:8080\u003C/a>にアクセスします。\u003Ccode>application.yml\u003C/code>に記載した内容が反省されています。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F118e2519-baef-8a48-a95b-4dc17a01b9cd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=28db93e12d979cee293e2a73d27a9915\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F118e2519-baef-8a48-a95b-4dc17a01b9cd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=28db93e12d979cee293e2a73d27a9915\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F118e2519-baef-8a48-a95b-4dc17a01b9cd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7507b90fa3dea46a8c925f8da25d215b 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/118e2519-baef-8a48-a95b-4dc17a01b9cd.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch2 data-sourcepos=\"335:1-335:15\">\n\u003Cspan id=\"さいごに\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>さいごに\u003C/h2>\n\u003Cp data-sourcepos=\"336:1-336:321\">時間かかってしまいましたが、kotlinでspring bootを使用したアプリケーションを構築できました。実際にはもっとエラーに遭遇していますが、たいてい起動する時のJavaのバージョン違いやチュートリアルの読み飛ばしだったように思います。\u003C/p>\n\u003Cp data-sourcepos=\"338:1-338:291\">個人的にはkotlinの利点として、\u003Ccode>null-safety\u003C/code>である点と\u003Ccode>JUnit\u003C/code>テストの関数名が文章で書けるという点でした。ただ\u003Ccode>null-safety\u003C/code>はまだまだイメージが掴めていないので、積極的に使いこなして理解していきたいところです。\u003C/p>\n","# 前提\n前回に引き続きチュートリアルを実施してみます。\n\nhttps://qiita.com/y5347M/items/203a2b2fc3532bf9699f\n\nコーディングルールがわからないときはこちらを参照。（間違っていたら指摘いただけると幸いです。）\n\nhttps://runebook.dev/ja/docs/kotlin/docs/reference/coding-conventions\n\n# 環境\n- macOS: 11.6.4\n- IntelliJ IDEA: 2021.2.3 (Community Edition)\n- Kotlin: 212-1.5.10-release-IJ5457.46\n- Gradle: 7.4.1\n- Java: temurin 17.0.3\n\n# 手順\n## ブログエンジンを実装\n#### \"blog\" Mustache テンプレートを更新\n`src/main/resources/templates/blog.mustache`\n```mustache:blog.mustache\n{{> header}}\n\n\u003Ch1>{{title}}\u003C/h1>\n\n\u003Cdiv class=\"articles\">\n\n  {{#articles}}\n    \u003Csection>\n      \u003Cheader class=\"article-header\">\n        \u003Ch2 class=\"article-title\">\u003Ca href=\"/article/{{slug}}\">{{title}}\u003C/a>\u003C/h2>\n        \u003Cdiv class=\"article-meta\">By  \u003Cstrong>{{author.firstname}}\u003C/strong>, on \u003Cstrong>{{addedAt}}\u003C/strong>\u003C/div>\n      \u003C/header>\n      \u003Cdiv class=\"article-description\">\n        {{headline}}\n      \u003C/div>\n    \u003C/section>\n  {{/articles}}\n\u003C/div>\n\n{{> footer}}\n```\n#### 新しい記事を作成\n`src/main/resources/templates/article.mustache`\n```mustache:article.mustache\n{{> header}}\n\n\u003Csection class=\"article\">\n  \u003Cheader class=\"article-header\">\n    \u003Ch1 class=\"article-title\">{{article.title}}\u003C/h1>\n    \u003Cp class=\"article-meta\">By  \u003Cstrong>{{article.author.firstname}}\u003C/strong>, on \u003Cstrong>{{article.addedAt}}\u003C/strong>\u003C/p>\n  \u003C/header>\n\n  \u003Cdiv class=\"article-description\">\n    {{article.headline}}\n\n    {{article.content}}\n  \u003C/div>\n\u003C/section>\n\n{{> footer}}\n```\n\n#### Controllerを更新\nこのコントローラーは単一のコンストラクター（暗黙的な`@Autowired`）があるので、`ArticleRepository`と`MarkdownConverter`のコンストラクターのパラメーターは自動的にAutrowiredされるそうです。\n（`MarkdownConverter`ってどこのことでしょう…）\n\n`src/main/kotlin/com/example/blog/HtmlController.kt`\n```kotlin:HtmlController.kt\npackage com.example.blog\n\nimport org.springframework.http.HttpStatus\nimport org.springframework.stereotype.Controller\nimport org.springframework.ui.Model\nimport org.springframework.ui.set\nimport org.springframework.web.bind.annotation.GetMapping\nimport org.springframework.web.bind.annotation.PathVariable\nimport org.springframework.web.server.ResponseStatusException\n\n@Controller\nclass HtmlController(private val repository: ArticleRepository) {\n\n    @GetMapping(\"/\")\n    fun blog(model: Model): String {\n        model[\"title\"] = \"Blog\"\n        model[\"articles\"] = repository.findAllByOrderByAddedAtDesc().map { it.render() }\n        return \"blog\"\n    }\n\n    @GetMapping(\"/article/{slug}\")\n    fun article(@PathVariable slug: String, model: Model): String {\n        val article = repository\n                .findBySlug(slug)\n                ?.render()\n                ?: throw ResponseStatusException(HttpStatus.NOT_FOUND, \"This article does not exist\")\n        model[\"title\"] = article.title\n        model[\"article\"] = article\n        return \"article\"\n    }\n\n    fun Article.render() = RenderedArticle(\n            slug,\n            title,\n            headline,\n            content,\n            author,\n            addedAt.format()\n    )\n\n    data class RenderedArticle(\n            val slug: String,\n            val title: String,\n            val headline: String,\n            val content: String,\n            val author: ArticleUser,\n            val addedAt: String)\n\n}\n```\n\n#### 初期データを登録\n`src/main/kotlin/com/example/blog/BlogConfiguration.kt`\n```kotlin:BlogConfiguration.kt\npackage com.example.blog\n\nimport org.springframework.boot.ApplicationRunner\nimport org.springframework.context.annotation.Bean\nimport org.springframework.context.annotation.Configuration\n\n@Configuration\nclass BlogConfiguration {\n\n    @Bean\n    fun databaseInitializer(articleUserRepository: ArticleUserRepository,\n                            articleRepository: ArticleRepository) = ApplicationRunner {\n\n        val smaldini = articleUserRepository.save(ArticleUser(\"smaldini\", \"Stéphane\", \"Maldini\"))\n        articleRepository.save(Article(\n                title = \"Reactor Bismuth is out\",\n                headline = \"Lorem ipsum\",\n                content = \"dolor sit amet\",\n                author = smaldini\n        ))\n        articleRepository.save(Article(\n                title = \"Reactor Aluminium has landed\",\n                headline = \"Lorem ipsum\",\n                content = \"dolor sit amet\",\n                author = smaldini\n        ))\n    }\n}\n```\n\n#### 統合テストの更新\n`src/test/kotlin/com/example/blog/IntegrationTests.kt`\n```\npackage com.example.blog\n\nimport org.assertj.core.api.Assertions.assertThat\nimport org.junit.jupiter.api.AfterAll\nimport org.junit.jupiter.api.BeforeAll\nimport org.junit.jupiter.api.Test\nimport org.springframework.beans.factory.annotation.Autowired\nimport org.springframework.boot.test.context.SpringBootTest\nimport org.springframework.boot.test.web.client.TestRestTemplate\nimport org.springframework.boot.test.web.client.getForEntity\nimport org.springframework.http.HttpStatus\n\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\nclass IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {\n\n    @BeforeAll\n    fun setup() {\n        println(\">> Setup\")\n    }\n\n    @Test\n    fun `Assert blog page title, content and status code`() {\n        println(\">> Assert blog page title, content and status code\")\n        val entity = restTemplate.getForEntity\u003CString>(\"/\")\n        assertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n        assertThat(entity.body).contains(\"\u003Ch1>Blog\u003C/h1>\", \"Reactor\")\n    }\n\n    @Test\n    fun `Assert article page title, content and status code`() {\n        println(\">> Assert article page title, content and status code\")\n        val title = \"Reactor Aluminium has landed\"\n        val entity = restTemplate.getForEntity\u003CString>(\"/article/${title.toSlug()}\")\n        assertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n        assertThat(entity.body).contains(title, \"Lorem ipsum\", \"dolor sit amet\")\n    }\n\n    @AfterAll\n    fun teardown() {\n        println(\">> Tear down\")\n    }\n\n}\n```\n\nアプリケーションを起動して、[http://localhost:8080](http://localhost:8080/)にアクセスします。初期化データが投入されています。\n\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/d0ac4c91-b31c-8efb-d6ff-4eb26a5bbc3c.png\">\nリンクになっているところをクリックします。記事が参照できるようになっています。\n\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/56fd3136-17f1-7cf8-6dab-07ab431bfdf9.png\">\n\n\n## 構成プロパティ\n引用：`Kotlin では、アプリケーションプロパティを管理するための推奨される方法は、@ConfigurationProperties を @ConstructorBinding と組み合わせて、読み取り専用プロパティを使用できるようにすること`\n\nだそうです。\n#### プロパティの用意\n`src/main/kotlin/com/example/blog/BlogProperties.kt`\n```kotlin:BlogProperties.kt\npackage com.example.blog\n\nimport org.springframework.boot.context.properties.ConfigurationProperties\nimport org.springframework.boot.context.properties.ConstructorBinding\n\n@ConstructorBinding\n@ConfigurationProperties(\"blog\")\ndata class BlogProperties(var title: String, val banner: Banner) {\n    data class Banner(val title: String? = null, val content: String)\n}\n```\n\n#### アプリケーションレベルでプロパティを有効にする\n`src/main/kotlin/com/example/blog/BlogApplication.kt`\n```kotlin:BlogApplication.kt\npackage com.example.blog\n\nimport org.springframework.boot.autoconfigure.SpringBootApplication\nimport org.springframework.boot.context.properties.EnableConfigurationProperties\nimport org.springframework.boot.runApplication\n\n@SpringBootApplication\n@EnableConfigurationProperties(BlogProperties::class)\nclass BlogApplication\n\nfun main(args: Array\u003CString>) {\n    runApplication\u003CBlogApplication>(*args)\n}\n```\n\n#### build.gradle.ktsの更新\nカスタムプロパティをIDEに認識させるために、`spring-boot-configuration-processor`依存関係でkapt を構成する必要があります。\n`build.gradle.kts`\n```build.gradle.kts\nplugins {\n  ...\n  kotlin(\"kapt\") version \"1.4.32\"\n}\n\ndependencies {\n  ...\n  kapt(\"org.springframework.boot:spring-boot-configuration-processor\")\n}\n```\n\n#### application.propertiesの更新\n```properties:application.properties\nblog.title=Blog\nblog.banner.title=Warning\nblog.banner.content=The blog will be down tomorrow.\n```\n\nせっかくなのでyml形式にしてみます。\n```yml:application.yml\nblog:\n  title: Blog\n  banner:\n    title: Warning\n    content: The blog will be down tomorrow.\n```\n\n#### テンプレートの更新\n`src/main/resources/templates/blog.mustache`\n```mustache:blog.mustache\n{{> header}}\n\n\u003Ch1>{{title}}\u003C/h1>\n\n{{> header}}\n\n\u003Cdiv class=\"articles\">\n\n  {{#banner.title}}\n  \u003Csection>\n    \u003Cheader class=\"banner\">\n      \u003Ch2 class=\"banner-title\">{{banner.title}}\u003C/h2>\n    \u003C/header>\n    \u003Cdiv class=\"banner-content\">\n      {{banner.content}}\n    \u003C/div>\n  \u003C/section>\n  {{/banner.title}}\n\n  {{#articles}}\n    \u003Csection>\n      \u003Cheader class=\"article-header\">\n        \u003Ch2 class=\"article-title\">\u003Ca href=\"/article/{{slug}}\">{{title}}\u003C/a>\u003C/h2>\n        \u003Cdiv class=\"article-meta\">By  \u003Cstrong>{{author.firstname}}\u003C/strong>, on \u003Cstrong>{{addedAt}}\u003C/strong>\u003C/div>\n      \u003C/header>\n      \u003Cdiv class=\"article-description\">\n        {{headline}}\n      \u003C/div>\n    \u003C/section>\n  {{/articles}}\n\u003C/div>\n\n{{> footer}}\n```\n#### コントローラーの更新\nクラスの引数にBlogPropertiesの追加、blog関数の処理を更新します。\n\n`src/main/kotlin/com/example/blog/HtmlController.kt`\n```kotlin:HtmlController.kt\n@Controller\nclass HtmlController(private val repository: ArticleRepository, private val properties: BlogProperties) {\n\n    @GetMapping(\"/\")\n    fun blog(model: Model): String {\n        model[\"title\"] = properties.title\n        model[\"banner\"] = properties.banner\n        model[\"articles\"] = repository.findAllByOrderByAddedAtDesc().map { it.render() }\n        return \"blog\"\n    }\n\n  ・・・\n```\n\nアプリケーションをリフレッシュし直して再度[http://localhost:8080](http://localhost:8080/)にアクセスします。`application.yml`に記載した内容が反省されています。\n\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/118e2519-baef-8a48-a95b-4dc17a01b9cd.png\">\n\n## さいごに\n時間かかってしまいましたが、kotlinでspring bootを使用したアプリケーションを構築できました。実際にはもっとエラーに遭遇していますが、たいてい起動する時のJavaのバージョン違いやチュートリアルの読み飛ばしだったように思います。\n\n個人的にはkotlinの利点として、`null-safety`である点と`JUnit`テストの関数名が文章で書けるという点でした。ただ`null-safety`はまだまだイメージが掴めていないので、積極的に使いこなして理解していきたいところです。\n\n\n",false,0,"2022-06-26T12:41:26+09:00",null,"2218c3381118e015ecc5",[12,15],{"name":13,"versions":14},"Kotlin",[],{"name":16,"versions":17},"SpringBoot",[],"KotlinでSpring BootのWebアプリケーションを作成してみる（３）","https://qiita.com/y5347M/items/2218c3381118e015ecc5",{"description":21,"facebook_id":22,"followees_count":23,"followers_count":24,"github_login_name":25,"id":25,"items_count":26,"linkedin_id":22,"location":22,"name":25,"organization":22,"permanent_id":27,"profile_image_url":28,"team_only":6,"twitter_screen_name":29,"website_url":30},"バックエンドエンジニアをしています。","",5,1,"y5347M",18,2433961,"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/2433961/a4773675e7566e225738c8c15f9fda53e35bd799/large.png?1741427719","mmmm16089306","https://twitter.com/mmmm16089306",1368,{"description":21,"facebook_id":22,"followees_count":23,"followers_count":24,"github_login_name":25,"id":25,"items_count":26,"linkedin_id":22,"location":22,"name":25,"organization":22,"permanent_id":27,"profile_image_url":28,"team_only":6,"twitter_screen_name":29,"website_url":30,"image_monthly_upload_limit":33,"image_monthly_upload_remaining":34},104857600,101432560,1745893162697]