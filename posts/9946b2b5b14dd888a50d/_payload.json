[{"data":1,"prerenderedAt":39},["ShallowReactive",2],{"useQiitaArticleDetailFetcher-9946b2b5b14dd888a50d":3,"useQiitaAuthorizedUser":36},{"rendered_body":4,"body":5,"coediting":6,"comments_count":7,"created_at":8,"group":9,"id":10,"likes_count":11,"private":6,"reactions_count":7,"stocks_count":12,"tags":13,"title":23,"updated_at":8,"url":24,"user":25,"page_views_count":35,"team_membership":9,"organization_url_name":9,"slide":6},"\u003Ch1 data-sourcepos=\"1:1-1:8\">\n\u003Cspan id=\"前提\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%89%8D%E6%8F%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>前提\u003C/h1>\n\u003Cp data-sourcepos=\"2:1-2:108\">せっかくKotlinに触れ始めたので、ブラウザ自動テストを作成したいと思います。\u003C/p>\n\u003Ch1 data-sourcepos=\"4:1-4:8\">\n\u003Cspan id=\"環境\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E7%92%B0%E5%A2%83\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>環境\u003C/h1>\n\u003Cul data-sourcepos=\"5:1-10:0\">\n\u003Cli data-sourcepos=\"5:1-5:15\">macOS: 11.6.4\u003C/li>\n\u003Cli data-sourcepos=\"6:1-6:45\">IntelliJ IDEA: 2021.2.3 (Community Edition)\u003C/li>\n\u003Cli data-sourcepos=\"7:1-7:21\">Kotlin JVM: 1.6.21\u003C/li>\n\u003Cli data-sourcepos=\"8:1-8:15\">Gradle: 7.4.2\u003C/li>\n\u003Cli data-sourcepos=\"9:1-10:0\">Java: temurin 17.0.3\u003C/li>\n\u003C/ul>\n\u003Ch1 data-sourcepos=\"11:1-11:22\">\n\u003Cspan id=\"selenideについて\" class=\"fragment\">\u003C/span>\u003Ca href=\"#selenide%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>Selenideについて\u003C/h1>\n\u003Cp data-sourcepos=\"12:1-12:297\">\u003Ciframe id=\"qiita-embed-content__ef26ecbbf1858a580edfba7019f8e3b6\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ef26ecbbf1858a580edfba7019f8e3b6\" data-content=\"https%3A%2F%2Fwww.ossnews.jp%2Foss_info%2FSelenide%23%3A%7E%3Atext%3DSelenide%28%25E3%2582%25BB%25E3%2583%25AC%25E3%2583%258B%25E3%2583%2589%252F%25E3%2582%25BB%25E3%2583%25AC%25E3%2583%258A%25E3%2582%25A4%25E3%2583%2589%29%25E3%2581%25A8%2C%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A7%25E3%2581%2599%25E3%2580%2582\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Cblockquote data-sourcepos=\"14:1-14:383\">\n\u003Cp data-sourcepos=\"14:2-14:383\">Selenide(セレニド/セレナイド)とは、「Selenium WebDriver」を利用したテスト自動化フレームワークです。　Selenideは、読みやすく保守しやすい自動テストをJavaで記述できるフレームワークです。「シンプルAPI」「Ajaxサポート」「強力なセレクター」「簡単な設定」などの特徴があります。`\u003C/p>\n\u003C/blockquote>\n\u003Ch1 data-sourcepos=\"17:1-17:8\">\n\u003Cspan id=\"手順\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%89%8B%E9%A0%86\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>手順\u003C/h1>\n\u003Ch2 data-sourcepos=\"18:1-18:45\">\n\u003Cspan id=\"新しいプロジェクトを作成する\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%96%B0%E3%81%97%E3%81%84%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>新しいプロジェクトを作成する\u003C/h2>\n\u003Cp data-sourcepos=\"19:1-19:77\">まずはIntelliJを利用して新規プロジェクトを作成します。\u003C/p>\n\u003Ch4 data-sourcepos=\"21:1-21:29\">\n\u003Cspan id=\"プロジェクト作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>プロジェクト作成\u003C/h4>\n\u003Cp data-sourcepos=\"22:1-22:57\">IntelliJで\u003Ccode>File &gt; New &gt; Project...\u003C/code>を選択します。\u003C/p>\n\u003Ch4 data-sourcepos=\"24:1-24:26\">\n\u003Cspan id=\"設定を入力する\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E8%A8%AD%E5%AE%9A%E3%82%92%E5%85%A5%E5%8A%9B%E3%81%99%E3%82%8B\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>設定を入力する\u003C/h4>\n\u003Cp data-sourcepos=\"25:1-26:139\">以下の情報を入力します。その後Nextボタンをクリックします。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F1bcbfb15-ee78-a171-0bd6-715b79a73391.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=24cb6643535d9c09e4d2b786f58c89fa\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F1bcbfb15-ee78-a171-0bd6-715b79a73391.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=24cb6643535d9c09e4d2b786f58c89fa\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F1bcbfb15-ee78-a171-0bd6-715b79a73391.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2a25b5c89a45fa395356804367817666 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/1bcbfb15-ee78-a171-0bd6-715b79a73391.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Cul data-sourcepos=\"27:2-31:0\">\n\u003Cli data-sourcepos=\"27:2-27:25\">Name:\u003Ccode>selenide-sample\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"28:2-28:33\">Project Template:\u003Ccode>Application\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"29:2-29:31\">Build System:\u003Ccode>Gradle Kotlin\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"30:2-31:0\">Project JDK:\u003Ccode>temurin-17\u003C/code>\n\u003C/li>\n\u003C/ul>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3d3d121a-dfd6-aa1c-7236-276b16b68636.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b05ab0427727b6e662e2a0aa4a40253d\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3d3d121a-dfd6-aa1c-7236-276b16b68636.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b05ab0427727b6e662e2a0aa4a40253d\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3d3d121a-dfd6-aa1c-7236-276b16b68636.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=3733362109f2868ec28c180860068cbf 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/3d3d121a-dfd6-aa1c-7236-276b16b68636.png\" loading=\"lazy\">\u003C/a>\nTarget JVM versionは`1.8`では良くない気がしますが、選択肢が13までしかなかったので一旦このままにしておきます。\nFinishボタンをクリックするとプロジェクトが作成されます。\n\u003Ch2 data-sourcepos=\"36:1-36:19\">\n\u003Cspan id=\"gradleの設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#gradle%E3%81%AE%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>Gradleの設定\u003C/h2>\n\u003Cp data-sourcepos=\"37:1-37:60\">以降は以下のサイトを参考にしていきます。\u003C/p>\n\u003Cp data-sourcepos=\"39:1-39:37\">\u003Ciframe id=\"qiita-embed-content__1229aa15f94de6d49ccddc452f83871d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__1229aa15f94de6d49ccddc452f83871d\" data-content=\"https%3A%2F%2Fselenide.org%2Fquick-start.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Cp data-sourcepos=\"41:1-41:60\">\u003Ccode>build.gradle.kts\u003C/code>のdependenciesに一行追加します。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"42:1-46:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">build.gradle.kts\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"nf\">dependencies\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n  \u003Cspan class=\"nf\">testImplementation\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"com.codeborne:selenide:6.6.6\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"48:1-48:57\">ついでに色々バージョン関連を整えます。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"49:1-76:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">build.gradle.kts\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.jetbrains.kotlin.gradle.tasks.KotlinCompile\u003C/span>\n\n\u003Cspan class=\"nf\">plugins\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"nf\">kotlin\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"jvm\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"n\">version\u003C/span> \u003Cspan class=\"s\">\"1.6.21\"\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"n\">group\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"com.example\"\u003C/span>\n\u003Cspan class=\"n\">version\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"1.0-SNAPSHOT\"\u003C/span>\n\u003Cspan class=\"n\">java\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">sourceCompatibility\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"nc\">JavaVersion\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">VERSION_17\u003C/span>\n\n\u003Cspan class=\"nf\">repositories\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"nf\">mavenCentral\u003C/span>\u003Cspan class=\"p\">()\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"nf\">dependencies\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"nf\">testImplementation\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nf\">kotlin\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"test\"\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n    \u003Cspan class=\"nf\">testImplementation\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"com.codeborne:selenide:6.6.6\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"n\">tasks\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">test\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"nf\">useJUnitPlatform\u003C/span>\u003Cspan class=\"p\">()\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"n\">tasks\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">withType\u003C/span>\u003Cspan class=\"p\">&lt;\u003C/span>\u003Cspan class=\"nc\">KotlinCompile\u003C/span>\u003Cspan class=\"p\">&gt;()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"n\">kotlinOptions\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">jvmTarget\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"17\"\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"78:1-78:54\">gradleでライブラリを引っ張ってきます。\u003C/p>\n\u003Ch2 data-sourcepos=\"80:1-80:21\">\n\u003Cspan id=\"テストを書く\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E6%9B%B8%E3%81%8F\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テストを書く\u003C/h2>\n\u003Cp data-sourcepos=\"81:1-81:144\">SelenideのQuickStartにGoogle検索のサンプルがあるとのことだったので、そちらを参考にして作成してみました。\u003C/p>\n\u003Cp data-sourcepos=\"83:1-83:126\">\u003Ciframe id=\"qiita-embed-content__c883b393be39f9ff295e5b04d9c699bc\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__c883b393be39f9ff295e5b04d9c699bc\" data-content=\"https%3A%2F%2Fgithub.com%2Fselenide-examples%2Fgoogle%2Fblob%2Fmaster%2Ftest%2Forg%2Fselenide%2Fexamples%2Fgoogle%2Fselenide_page_object%2FGoogleTest.java\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Ch4 data-sourcepos=\"85:1-85:32\">\n\u003Cspan id=\"テストクラスの作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テストクラスの作成\u003C/h4>\n\u003Cp data-sourcepos=\"86:1-86:43\">\u003Ccode>com/example/selenium_sample/GoogleTest.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"87:1-108:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">GoogleTest.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.selenium_sample\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.CollectionCondition.sizeGreaterThan\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Condition.*\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Selenide.*\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.Test\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.openqa.selenium.By\u003C/span>\n\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">GoogleTest\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@Test\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">`Search\u003C/span> \u003Cspan class=\"k\">in\u003C/span> \u003Cspan class=\"nc\">Google`\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"k\">open\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"https://duckduckgo.com\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"err\">`$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">By\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">name\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"q\"\u003C/span>\u003Cspan class=\"p\">)).\u003C/span>\u003Cspan class=\"nf\">`val`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"selenide java\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">pressEnter\u003C/span>\u003Cspan class=\"p\">()\u003C/span>\n\n        \u003Cspan class=\"err\">`$$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\".results .result\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">shouldHave\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nf\">sizeGreaterThan\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"mi\">1\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n        \u003Cspan class=\"err\">`$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"#r1-0\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">shouldHave\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nf\">text\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"Selenide: concise UI tests in Java\"\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"109:1-110:139\">コード内の\u003Ccode>#\u003C/code>や\u003Ccode>.\u003C/code>でidやclassを指定しています。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F5c67712b-64d9-2109-7fa9-15bcfcfaa4f7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6dc7f40ceff72297dde11e3739095c6c\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F5c67712b-64d9-2109-7fa9-15bcfcfaa4f7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=6dc7f40ceff72297dde11e3739095c6c\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F5c67712b-64d9-2109-7fa9-15bcfcfaa4f7.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c12db2fc7ab3bd795cca290fbad86e28 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/5c67712b-64d9-2109-7fa9-15bcfcfaa4f7.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch4 data-sourcepos=\"112:1-112:20\">\n\u003Cspan id=\"テスト実行\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E5%AE%9F%E8%A1%8C\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テスト実行\u003C/h4>\n\u003Cp data-sourcepos=\"113:1-113:114\">画面が立ち上がり、実際の検索結果が表示されました。ただテストは失敗しました。\u003C/p>\n\u003Cp data-sourcepos=\"115:1-116:66\">思ったより検索結果が取れなかった、とかでしょうか。\u003Cbr>\n今回はサンプルなので、こちらはあきらめます。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"console\" data-sourcepos=\"117:1-122:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">console\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"gp\">List size mismatch: expected: &gt;\u003C/span>\u003Cspan class=\"w\"> \u003C/span>1, actual: 1, collection: .results .result\n\u003Cspan class=\"go\">Elements: [\n\u003C/span>\u003Cspan class=\"gp\">\t&lt;div class=\"result result--more\" id=\"rld-1\"&gt;\u003C/span>結果をさらに表示&lt;/div&gt;\n\u003Cspan class=\"go\">]\n\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch2 data-sourcepos=\"124:1-124:18\">\n\u003Cspan id=\"エラー解決\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E8%A7%A3%E6%B1%BA\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>エラー解決\u003C/h2>\n\u003Cp data-sourcepos=\"125:1-125:108\">テストは実行されているのですが、コンソールに以下のエラーが発生しました。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"console\" data-sourcepos=\"126:1-128:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">console\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"go\">SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"130:1-130:32\">\n\u003Cspan id=\"buildgradlektsを修正\" class=\"fragment\">\u003C/span>\u003Ca href=\"#buildgradlekts%E3%82%92%E4%BF%AE%E6%AD%A3\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>\u003Ccode>build.gradle.kts\u003C/code>を修正\u003C/h4>\n\u003Cp data-sourcepos=\"131:1-131:36\">こちらを参考にしました。\u003C/p>\n\u003Cp data-sourcepos=\"133:1-133:104\">\u003Ciframe id=\"qiita-embed-content__99f3b871bde4750d51f7a0935c2f6ad8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__99f3b871bde4750d51f7a0935c2f6ad8\" data-content=\"https%3A%2F%2Fstackoverflow.com%2Fquestions%2F7421612%2Fslf4j-failed-to-load-class-org-slf4j-impl-staticloggerbinder\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Cp data-sourcepos=\"135:1-135:40\">dependenciesに2行追加しました。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"136:1-141:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">build.gradle.kts\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"nf\">dependencies\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"nf\">testImplementation\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"org.slf4j:slf4j-api:2.0.0-alpha7\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"nf\">testImplementation\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"org.slf4j:slf4j-simple:2.0.0-alpha7\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"143:1-143:57\">結果、エラーは表示されなくなりました。\u003C/p>\n\u003Ch2 data-sourcepos=\"145:1-145:48\">\n\u003Cspan id=\"テスト終了後にブラウザが消える\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E7%B5%82%E4%BA%86%E5%BE%8C%E3%81%AB%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%8C%E6%B6%88%E3%81%88%E3%82%8B\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テスト終了後にブラウザが消える\u003C/h2>\n\u003Cp data-sourcepos=\"146:1-146:171\">テスト終了後ブラウザが消えてしまっては動作を確認しにくいですね。テスト終了後、ブラウザを残しておきたいと思います。\u003C/p>\n\u003Ch4 data-sourcepos=\"148:1-148:29\">\n\u003Cspan id=\"configurationの設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#configuration%E3%81%AE%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>\u003Ccode>Configuration\u003C/code>の設定\u003C/h4>\n\u003Cp data-sourcepos=\"149:1-150:71\">どうやら\u003Ccode>com.codeborne.selenide.Configuration\u003C/code>クラスのプロパティを設定することでテストの動作を変えることができそうです。\u003Cbr>\nそれらしいプロパティ\u003Ccode>holdBrowserOpen\u003C/code>を見つけました。\u003C/p>\n\u003Cp data-sourcepos=\"152:1-152:52\">Javadocにはこのように書かれています。\u003C/p>\n\u003Cblockquote data-sourcepos=\"153:1-153:258\">\n\u003Cp data-sourcepos=\"153:2-153:258\">If holdBrowserOpen is true, browser window stays open after running tests. It may be useful for debugging. Can be configured either programmatically, via selenide.properties file or by system property \"-Dselenide.holdBrowserOpen=true\". Default value: false.\u003C/p>\n\u003C/blockquote>\n\u003Cp data-sourcepos=\"155:1-155:324\">このプロパティをtrueにしておくと、テスト終了後もブラウザを開いたままにします。これはデバッグに役立つかもしれません。プログラムからも、\u003Ccode>selenide.properties\u003C/code>からも、またJVM引数からも設定することができます。デフォルトはfalseです。\u003C/p>\n\u003Ch4 data-sourcepos=\"157:1-157:69\">\n\u003Cspan id=\"テスト実行前にこのプロパティをtrueにしておく\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E5%AE%9F%E8%A1%8C%E5%89%8D%E3%81%AB%E3%81%93%E3%81%AE%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92true%E3%81%AB%E3%81%97%E3%81%A6%E3%81%8A%E3%81%8F\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テスト実行前にこのプロパティをtrueにしておく\u003C/h4>\n\u003Cp data-sourcepos=\"158:1-158:66\">テストクラスを以下のように変更してみました。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"159:1-188:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">GoogleTest.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.selenium_sample\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.CollectionCondition.sizeGreaterThan\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Condition.*\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Configuration\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Selenide.*\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.BeforeEach![スクリーンショット\u003C/span> \u003Cspan class=\"mi\">2022\u003C/span>\u003Cspan class=\"p\">-\u003C/span>\u003Cspan class=\"mi\">07\u003C/span>\u003Cspan class=\"p\">-\u003C/span>\u003Cspan class=\"mi\">03\u003C/span> \u003Cspan class=\"mf\">22.51.13\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">png\u003C/span>\u003Cspan class=\"p\">](\u003C/span>\u003Cspan class=\"n\">https\u003C/span>\u003Cspan class=\"p\">:\u003C/span>\u003Cspan class=\"c1\">//qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/8d44122b-27da-a846-03a1-27dba95bd0ae.png)\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.Test\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.openqa.selenium.By\u003C/span>\n\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">GoogleTest\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@BeforeEach\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">`Set\u003C/span> \u003Cspan class=\"nc\">Configure\u003C/span> \u003Cspan class=\"nc\">Before\u003C/span> \u003Cspan class=\"nc\">Test`\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"nc\">Configuration\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">holdBrowserOpen\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"k\">true\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n    \u003Cspan class=\"nd\">@Test\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">`Search\u003C/span> \u003Cspan class=\"k\">in\u003C/span> \u003Cspan class=\"nc\">Google`\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"k\">open\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"https://duckduckgo.com\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"err\">`$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">By\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">name\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"q\"\u003C/span>\u003Cspan class=\"p\">)).\u003C/span>\u003Cspan class=\"nf\">`val`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"selenide java\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">pressEnter\u003C/span>\u003Cspan class=\"p\">()\u003C/span>\n\n        \u003Cspan class=\"err\">`$$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\".results .result\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">shouldHave\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nf\">sizeGreaterThan\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"mi\">1\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n        \u003Cspan class=\"err\">`$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"#r1-0\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">shouldHave\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nf\">text\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"Selenide: concise UI tests in Java\"\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"190:1-191:139\">今度はブラウザが消えずに残ってくれました👏\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F1da35738-b271-3cc0-df9b-7fbda1155745.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=cad65b4d532e3c1ae9d7a70c085d624d\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F1da35738-b271-3cc0-df9b-7fbda1155745.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=cad65b4d532e3c1ae9d7a70c085d624d\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F1da35738-b271-3cc0-df9b-7fbda1155745.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=24f6431d34513a83ecb8be3b38cfabbf 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/1da35738-b271-3cc0-df9b-7fbda1155745.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch2 data-sourcepos=\"193:1-193:33\">\n\u003Cspan id=\"chrome以外で動かしたい\" class=\"fragment\">\u003C/span>\u003Ca href=\"#chrome%E4%BB%A5%E5%A4%96%E3%81%A7%E5%8B%95%E3%81%8B%E3%81%97%E3%81%9F%E3%81%84\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>Chrome以外で動かしたい\u003C/h2>\n\u003Cp data-sourcepos=\"194:1-195:206\">Chrome以外のブラウザでテストをしたいということもあると思います。そのときはどうすれば良いでしょうか。\u003Cbr>\nこちらも\u003Ccode>com.codeborne.selenide.Configuration\u003C/code>クラスのプロパティを設定することで変更が可能なようです。\u003Ccode>browser\u003C/code>プロパティには以下のように記載があります。\u003C/p>\n\u003Cblockquote data-sourcepos=\"196:1-196:227\">\n\u003Cp data-sourcepos=\"196:3-196:227\">Which browser to use. Can be configured either programmatically, via selenide.properties file or by system property \"-Dselenide.browser=ie\". Supported values: \"chrome\", \"firefox\", \"ie\", \"opera\", \"edge\" Default value: \"chrome\"\u003C/p>\n\u003C/blockquote>\n\u003Cp data-sourcepos=\"198:1-198:268\">どのブラウザをしようするか、プログラムからも、\u003Ccode>selenide.properties\u003C/code>からも、またJVM引数からも設定することができます。サポートされている値は\u003Ccode>chrome\u003C/code>/\u003Ccode>firefox\u003C/code>/\u003Ccode>ie\u003C/code>/\u003Ccode>opera\u003C/code>/\u003Ccode>edge\u003C/code>で、デフォルトは\u003Ccode>chrome\u003C/code>。\u003C/p>\n\u003Cp data-sourcepos=\"200:1-200:84\">こちらをsafariに変更してみます。定数も用意されていました。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"202:1-233:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">GoogleTest.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.selenium_sample\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Browser\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Browsers\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.CollectionCondition.sizeGreaterThan\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Condition.*\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Configuration\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">com.codeborne.selenide.Selenide.*\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.BeforeEach\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.Test\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.openqa.selenium.By\u003C/span>\n\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">GoogleTest\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@BeforeEach\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">`Set\u003C/span> \u003Cspan class=\"nc\">Configure\u003C/span> \u003Cspan class=\"nc\">Before\u003C/span> \u003Cspan class=\"nc\">Test`\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"nc\">Configuration\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">holdBrowserOpen\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"k\">true\u003C/span>\n        \u003Cspan class=\"nc\">Configuration\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">browser\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"nc\">Browsers\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">SAFARI\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n    \u003Cspan class=\"nd\">@Test\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">`Search\u003C/span> \u003Cspan class=\"k\">in\u003C/span> \u003Cspan class=\"nc\">Google`\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"k\">open\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"https://duckduckgo.com\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"err\">`$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">By\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nf\">name\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"q\"\u003C/span>\u003Cspan class=\"p\">)).\u003C/span>\u003Cspan class=\"nf\">`val`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"selenide java\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">pressEnter\u003C/span>\u003Cspan class=\"p\">()\u003C/span>\n\n        \u003Cspan class=\"err\">`$$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\".results .result\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">shouldHave\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nf\">sizeGreaterThan\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"mi\">1\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n        \u003Cspan class=\"err\">`$`\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"#r1-0\"\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">shouldHave\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nf\">text\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"Selenide: concise UI tests in Java\"\u003C/span>\u003Cspan class=\"p\">))\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"235:1-235:51\">ただこのままでは動きませんでした。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"console\" data-sourcepos=\"236:1-238:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">console\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"go\">Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.\n\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"240:1-240:23\">\n\u003Cspan id=\"safari側の設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#safari%E5%81%B4%E3%81%AE%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>safari側の設定\u003C/h4>\n\u003Cp data-sourcepos=\"241:1-242:139\">リモートオートメーションを許可にチェックを入れます。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F2580da55-3616-c280-0444-9c8dd0c668bf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b23f7c4eb1d69c87b5bf92e8a542ffee\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F2580da55-3616-c280-0444-9c8dd0c668bf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=b23f7c4eb1d69c87b5bf92e8a542ffee\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F2580da55-3616-c280-0444-9c8dd0c668bf.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=68749ccd7672be9ea198344ecabff6c4 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/2580da55-3616-c280-0444-9c8dd0c668bf.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch4 data-sourcepos=\"244:1-244:26\">\n\u003Cspan id=\"再度テスト実行\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%86%8D%E5%BA%A6%E3%83%86%E3%82%B9%E3%83%88%E5%AE%9F%E8%A1%8C\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>再度テスト実行\u003C/h4>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F4b7b0685-c15a-1040-eb4b-0ff7ebe027a6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=93cbeaf03b82a0dd944f8265fe8a5afc\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F4b7b0685-c15a-1040-eb4b-0ff7ebe027a6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=93cbeaf03b82a0dd944f8265fe8a5afc\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F4b7b0685-c15a-1040-eb4b-0ff7ebe027a6.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2a3f2e4f80ec67ca3fcadbf50fcb635e 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/4b7b0685-c15a-1040-eb4b-0ff7ebe027a6.png\" loading=\"lazy\">\u003C/a>\n\u003Cp data-sourcepos=\"247:1-249:129\">safariの場合、デフォルトでwebdriverが存在するようです。（パス:\u003Cbr>\n\u003Ccode>/usr/bin/safaridriver\u003C/code>）。\u003Cbr>\n他のブラウザを使用する場合は、自分でダウンロードする等の手間が発生するかもしれません。\u003C/p>\n\u003Cp data-sourcepos=\"251:1-251:59\">seleniumのこのページが参考になりそうです。\u003C/p>\n\u003Cp data-sourcepos=\"253:1-253:84\">\u003Ciframe id=\"qiita-embed-content__a89a2be74220a7961def76da4f68172d\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__a89a2be74220a7961def76da4f68172d\" data-content=\"https%3A%2F%2Fwww.selenium.dev%2Fja%2Fdocumentation%2Fwebdriver%2Fgetting_started%2Finstall_drivers%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Ch1 data-sourcepos=\"255:1-255:14\">\n\u003Cspan id=\"さいごに\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>さいごに\u003C/h1>\n\u003Cp data-sourcepos=\"256:1-256:297\">テストを起動するだけでしたら簡単ですね。ただ、ページオブジェクト等を用意してさらに綺麗にしていくとなると最初は大変かもしれません。しかし、手動でテストをくりかえすよりかは良いのではないかと思います。\u003C/p>\n","# 前提\nせっかくKotlinに触れ始めたので、ブラウザ自動テストを作成したいと思います。\n\n# 環境\n- macOS: 11.6.4\n- IntelliJ IDEA: 2021.2.3 (Community Edition)\n- Kotlin JVM: 1.6.21 \n- Gradle: 7.4.2\n- Java: temurin 17.0.3\n\n# Selenideについて\nhttps://www.ossnews.jp/oss_info/Selenide#:~:text=Selenide(%E3%82%BB%E3%83%AC%E3%83%8B%E3%83%89%2F%E3%82%BB%E3%83%AC%E3%83%8A%E3%82%A4%E3%83%89)%E3%81%A8,%E3%83%86%E3%82%B9%E3%83%88%E8%87%AA%E5%8B%95%E5%8C%96%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%A7%E3%81%99%E3%80%82\n\n>Selenide(セレニド/セレナイド)とは、「Selenium WebDriver」を利用したテスト自動化フレームワークです。　Selenideは、読みやすく保守しやすい自動テストをJavaで記述できるフレームワークです。「シンプルAPI」「Ajaxサポート」「強力なセレクター」「簡単な設定」などの特徴があります。`\n\n\n# 手順\n## 新しいプロジェクトを作成する\nまずはIntelliJを利用して新規プロジェクトを作成します。\n\n#### プロジェクト作成\nIntelliJで`File > New > Project...`を選択します。\n\n#### 設定を入力する\n以下の情報を入力します。その後Nextボタンをクリックします。\n\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/1bcbfb15-ee78-a171-0bd6-715b79a73391.png\">\n - Name:`selenide-sample`\n - Project Template:`Application`\n - Build System:`Gradle Kotlin`\n - Project JDK:`temurin-17`\n\n\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/3d3d121a-dfd6-aa1c-7236-276b16b68636.png\">\nTarget JVM versionは`1.8`では良くない気がしますが、選択肢が13までしかなかったので一旦このままにしておきます。\nFinishボタンをクリックするとプロジェクトが作成されます。\n\n##  Gradleの設定\n以降は以下のサイトを参考にしていきます。\n\nhttps://selenide.org/quick-start.html\n\n`build.gradle.kts`のdependenciesに一行追加します。\n```build.gradle.kts\ndependencies {\n  testImplementation(\"com.codeborne:selenide:6.6.6\")\n}\n```\n\nついでに色々バージョン関連を整えます。\n```build.gradle.kts\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nplugins {\n    kotlin(\"jvm\") version \"1.6.21\"\n}\n\ngroup = \"com.example\"\nversion = \"1.0-SNAPSHOT\"\njava.sourceCompatibility = JavaVersion.VERSION_17\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testImplementation(kotlin(\"test\"))\n    testImplementation(\"com.codeborne:selenide:6.6.6\")\n}\n\ntasks.test {\n    useJUnitPlatform()\n}\n\ntasks.withType\u003CKotlinCompile>() {\n    kotlinOptions.jvmTarget = \"17\"\n}\n```\n\ngradleでライブラリを引っ張ってきます。\n\n## テストを書く\nSelenideのQuickStartにGoogle検索のサンプルがあるとのことだったので、そちらを参考にして作成してみました。\n\nhttps://github.com/selenide-examples/google/blob/master/test/org/selenide/examples/google/selenide_page_object/GoogleTest.java\n\n#### テストクラスの作成\n`com/example/selenium_sample/GoogleTest.kt`\n```kotlin:GoogleTest.kt\npackage com.example.selenium_sample\n\nimport com.codeborne.selenide.CollectionCondition.sizeGreaterThan\nimport com.codeborne.selenide.Condition.*\nimport com.codeborne.selenide.Selenide.*\nimport org.junit.jupiter.api.Test\nimport org.openqa.selenium.By\n\nclass GoogleTest {\n\n    @Test\n    fun `Search in Google`() {\n        open(\"https://duckduckgo.com\")\n        `$`(By.name(\"q\")).`val`(\"selenide java\").pressEnter()\n\n        `$$`(\".results .result\").shouldHave(sizeGreaterThan(1))\n        `$`(\"#r1-0\").shouldHave(text(\"Selenide: concise UI tests in Java\"))\n    }\n\n}\n```\nコード内の`#`や`.`でidやclassを指定しています。\n\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/5c67712b-64d9-2109-7fa9-15bcfcfaa4f7.png\">\n\n#### テスト実行\n画面が立ち上がり、実際の検索結果が表示されました。ただテストは失敗しました。\n\n思ったより検索結果が取れなかった、とかでしょうか。\n今回はサンプルなので、こちらはあきらめます。\n```console:console\nList size mismatch: expected: > 1, actual: 1, collection: .results .result\nElements: [\n\t\u003Cdiv class=\"result result--more\" id=\"rld-1\">結果をさらに表示\u003C/div>\n]\n```\n\n## エラー解決\nテストは実行されているのですが、コンソールに以下のエラーが発生しました。\n```console:console\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\n```\n\n#### `build.gradle.kts`を修正\nこちらを参考にしました。\n\nhttps://stackoverflow.com/questions/7421612/slf4j-failed-to-load-class-org-slf4j-impl-staticloggerbinder\n\ndependenciesに2行追加しました。\n```build.gradle.kts\ndependencies {\n    testImplementation(\"org.slf4j:slf4j-api:2.0.0-alpha7\")\n    testImplementation(\"org.slf4j:slf4j-simple:2.0.0-alpha7\")\n}\n```\n\n結果、エラーは表示されなくなりました。\n\n## テスト終了後にブラウザが消える\nテスト終了後ブラウザが消えてしまっては動作を確認しにくいですね。テスト終了後、ブラウザを残しておきたいと思います。\n\n#### `Configuration`の設定\nどうやら`com.codeborne.selenide.Configuration`クラスのプロパティを設定することでテストの動作を変えることができそうです。\nそれらしいプロパティ`holdBrowserOpen`を見つけました。\n\nJavadocにはこのように書かれています。\n>If holdBrowserOpen is true, browser window stays open after running tests. It may be useful for debugging. Can be configured either programmatically, via selenide.properties file or by system property \"-Dselenide.holdBrowserOpen=true\". Default value: false.\n\nこのプロパティをtrueにしておくと、テスト終了後もブラウザを開いたままにします。これはデバッグに役立つかもしれません。プログラムからも、`selenide.properties`からも、またJVM引数からも設定することができます。デフォルトはfalseです。\n\n#### テスト実行前にこのプロパティをtrueにしておく\nテストクラスを以下のように変更してみました。\n```kotlin:GoogleTest.kt\npackage com.example.selenium_sample\n\nimport com.codeborne.selenide.CollectionCondition.sizeGreaterThan\nimport com.codeborne.selenide.Condition.*\nimport com.codeborne.selenide.Configuration\nimport com.codeborne.selenide.Selenide.*\nimport org.junit.jupiter.api.BeforeEach![スクリーンショット 2022-07-03 22.51.13.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/8d44122b-27da-a846-03a1-27dba95bd0ae.png)\n\nimport org.junit.jupiter.api.Test\nimport org.openqa.selenium.By\n\nclass GoogleTest {\n\n    @BeforeEach\n    fun `Set Configure Before Test`() {\n        Configuration.holdBrowserOpen = true\n    }\n\n    @Test\n    fun `Search in Google`() {\n        open(\"https://duckduckgo.com\")\n        `$`(By.name(\"q\")).`val`(\"selenide java\").pressEnter()\n\n        `$$`(\".results .result\").shouldHave(sizeGreaterThan(1))\n        `$`(\"#r1-0\").shouldHave(text(\"Selenide: concise UI tests in Java\"))\n    }\n\n}\n```\n\n今度はブラウザが消えずに残ってくれました👏\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/1da35738-b271-3cc0-df9b-7fbda1155745.png\">\n\n## Chrome以外で動かしたい\nChrome以外のブラウザでテストをしたいということもあると思います。そのときはどうすれば良いでしょうか。\nこちらも`com.codeborne.selenide.Configuration`クラスのプロパティを設定することで変更が可能なようです。`browser`プロパティには以下のように記載があります。\n> Which browser to use. Can be configured either programmatically, via selenide.properties file or by system property \"-Dselenide.browser=ie\". Supported values: \"chrome\", \"firefox\", \"ie\", \"opera\", \"edge\" Default value: \"chrome\"\n\nどのブラウザをしようするか、プログラムからも、`selenide.properties`からも、またJVM引数からも設定することができます。サポートされている値は`chrome`/`firefox`/`ie`/`opera`/`edge`で、デフォルトは`chrome`。\n\nこちらをsafariに変更してみます。定数も用意されていました。\n\n```kotlin:GoogleTest.kt\npackage com.example.selenium_sample\n\nimport com.codeborne.selenide.Browser\nimport com.codeborne.selenide.Browsers\nimport com.codeborne.selenide.CollectionCondition.sizeGreaterThan\nimport com.codeborne.selenide.Condition.*\nimport com.codeborne.selenide.Configuration\nimport com.codeborne.selenide.Selenide.*\nimport org.junit.jupiter.api.BeforeEach\nimport org.junit.jupiter.api.Test\nimport org.openqa.selenium.By\n\nclass GoogleTest {\n\n    @BeforeEach\n    fun `Set Configure Before Test`() {\n        Configuration.holdBrowserOpen = true\n        Configuration.browser = Browsers.SAFARI\n    }\n\n    @Test\n    fun `Search in Google`() {\n        open(\"https://duckduckgo.com\")\n        `$`(By.name(\"q\")).`val`(\"selenide java\").pressEnter()\n\n        `$$`(\".results .result\").shouldHave(sizeGreaterThan(1))\n        `$`(\"#r1-0\").shouldHave(text(\"Selenide: concise UI tests in Java\"))\n    }\n\n}\n```\n\nただこのままでは動きませんでした。\n```console:console\nCould not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.\n```\n\n#### safari側の設定\nリモートオートメーションを許可にチェックを入れます。\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/2580da55-3616-c280-0444-9c8dd0c668bf.png\">\n\n#### 再度テスト実行\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/4b7b0685-c15a-1040-eb4b-0ff7ebe027a6.png\">\n\nsafariの場合、デフォルトでwebdriverが存在するようです。（パス:\n`/usr/bin/safaridriver`）。\n他のブラウザを使用する場合は、自分でダウンロードする等の手間が発生するかもしれません。\n\nseleniumのこのページが参考になりそうです。\n\nhttps://www.selenium.dev/ja/documentation/webdriver/getting_started/install_drivers/\n\n# さいごに\nテストを起動するだけでしたら簡単ですね。ただ、ページオブジェクト等を用意してさらに綺麗にしていくとなると最初は大変かもしれません。しかし、手動でテストをくりかえすよりかは良いのではないかと思います。\n\n\n",false,0,"2022-07-08T12:36:52+09:00",null,"9946b2b5b14dd888a50d",1,2,[14,17,20],{"name":15,"versions":16},"Selenium",[],{"name":18,"versions":19},"Kotlin",[],{"name":21,"versions":22},"Selenide",[],"Kotlin×Selenideを利用してブラウザ自動テストをしてみる","https://qiita.com/y5347M/items/9946b2b5b14dd888a50d",{"description":26,"facebook_id":27,"followees_count":28,"followers_count":11,"github_login_name":29,"id":29,"items_count":30,"linkedin_id":27,"location":27,"name":29,"organization":27,"permanent_id":31,"profile_image_url":32,"team_only":6,"twitter_screen_name":33,"website_url":34},"バックエンドエンジニアをしています。","",5,"y5347M",18,2433961,"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/2433961/a4773675e7566e225738c8c15f9fda53e35bd799/large.png?1741427719","mmmm16089306","https://twitter.com/mmmm16089306",1929,{"description":26,"facebook_id":27,"followees_count":28,"followers_count":11,"github_login_name":29,"id":29,"items_count":30,"linkedin_id":27,"location":27,"name":29,"organization":27,"permanent_id":31,"profile_image_url":32,"team_only":6,"twitter_screen_name":33,"website_url":34,"image_monthly_upload_limit":37,"image_monthly_upload_remaining":38},104857600,101432560,1745893162671]