[{"data":1,"prerenderedAt":44},["ShallowReactive",2],{"useQiitaArticleDetailFetcher-5f5fa349a86326ac1c5c":3,"useQiitaAuthorizedUser":41},{"rendered_body":4,"body":5,"coediting":6,"comments_count":7,"created_at":8,"group":9,"id":10,"likes_count":11,"private":6,"reactions_count":7,"stocks_count":7,"tags":12,"title":28,"updated_at":8,"url":29,"user":30,"page_views_count":40,"team_membership":9,"organization_url_name":9,"slide":6},"\u003Ch1 data-sourcepos=\"1:1-1:8\">\n\u003Cspan id=\"前提\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%89%8D%E6%8F%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>前提\u003C/h1>\n\u003Cp data-sourcepos=\"2:1-3:168\">業務でこんな処理を実装する気がするので、簡単に予習してみます。\u003Cbr>\n今回は動くか検証のみなので、ローカルで起動したJavaアプリケーション（Spring Boot）からSQSにメッセージを送信してみます。\u003C/p>\n\u003Cp data-sourcepos=\"5:1-5:204\">本当はlambdaからrdsへ登録・更新する処理を実装したかったのですが、それはまた別の機会に。（なのでSQSやlambdaの名前がmergeXXXXみたいになってます。）\u003C/p>\n\u003Cp data-sourcepos=\"7:1-7:134\">\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3a229f2f-f2b9-d425-1c1e-6ec78dd46b8e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=15dafb81334fc1728ef3da0e222a3c96\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3a229f2f-f2b9-d425-1c1e-6ec78dd46b8e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=15dafb81334fc1728ef3da0e222a3c96\" alt=\"lambda-sqs.drawio.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3a229f2f-f2b9-d425-1c1e-6ec78dd46b8e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=7d38a601e5eeafb45970f315e3a6ac46 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/3a229f2f-f2b9-d425-1c1e-6ec78dd46b8e.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch1 data-sourcepos=\"9:1-9:8\">\n\u003Cspan id=\"環境\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E7%92%B0%E5%A2%83\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>環境\u003C/h1>\n\u003Cul data-sourcepos=\"10:1-14:0\">\n\u003Cli data-sourcepos=\"10:1-10:13\">macOS: 12.6\u003C/li>\n\u003Cli data-sourcepos=\"11:1-11:45\">IntelliJ IDEA: 2022.2.3 (Community Edition)\u003C/li>\n\u003Cli data-sourcepos=\"12:1-12:13\">Gradle: 7.5\u003C/li>\n\u003Cli data-sourcepos=\"13:1-14:0\">Java: temurin 17.0.3\u003C/li>\n\u003C/ul>\n\u003Ch1 data-sourcepos=\"15:1-15:8\">\n\u003Cspan id=\"手順\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%89%8B%E9%A0%86\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>手順\u003C/h1>\n\u003Ch2 data-sourcepos=\"17:1-17:30\">\n\u003Cspan id=\"プロジェクトの作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>プロジェクトの作成\u003C/h2>\n\u003Ch4 data-sourcepos=\"19:1-19:49\">\n\u003Cspan id=\"spring-initializrでプロジェクト作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#spring-initializr%E3%81%A7%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>spring initializrでプロジェクト作成\u003C/h4>\n\u003Cp data-sourcepos=\"20:1-22:139\">\u003Ca href=\"https://start.spring.io/\" rel=\"nofollow noopener\" target=\"_blank\">https://start.spring.io/\u003C/a>でプロジェクトの雛形を作成します。\u003Cbr>\n以下の画像のような構成にしています。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Fc2e5604c-71a3-5af3-dea0-c307670cd33e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=d98e201b5eaaae94ec3d9dd575ac2702\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Fc2e5604c-71a3-5af3-dea0-c307670cd33e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=d98e201b5eaaae94ec3d9dd575ac2702\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Fc2e5604c-71a3-5af3-dea0-c307670cd33e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=5a79e2e30a94c1df8322cba476596b22 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/c2e5604c-71a3-5af3-dea0-c307670cd33e.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Cp data-sourcepos=\"24:1-24:104\">GENERATEボタンを押してダウンロードしてきます。それをIDEツールで開きます。\u003C/p>\n\u003Ch4 data-sourcepos=\"26:1-26:26\">\n\u003Cspan id=\"buildgradleの設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#buildgradle%E3%81%AE%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>build.gradleの設定\u003C/h4>\n\u003Cp data-sourcepos=\"27:1-28:59\">\u003Ccode>com.amazonaws:aws-java-sdk-bom\u003C/code>と\u003Ccode>com.amazonaws:aws-java-sdk-sqs\u003C/code>を設定します。\u003Cbr>\nこの時点ではどちらも1.12.320が最新でした。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"gradle\" data-sourcepos=\"30:1-65:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">build.gradle\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"n\">plugins\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\t\u003Cspan class=\"n\">id\u003C/span> \u003Cspan class=\"s1\">'org.springframework.boot'\u003C/span> \u003Cspan class=\"n\">version\u003C/span> \u003Cspan class=\"s1\">'2.7.5-SNAPSHOT'\u003C/span>\n\t\u003Cspan class=\"n\">id\u003C/span> \u003Cspan class=\"s1\">'io.spring.dependency-management'\u003C/span> \u003Cspan class=\"n\">version\u003C/span> \u003Cspan class=\"s1\">'1.0.14.RELEASE'\u003C/span>\n\t\u003Cspan class=\"n\">id\u003C/span> \u003Cspan class=\"s1\">'java'\u003C/span>\n\u003Cspan class=\"o\">}\u003C/span>\n\n\u003Cspan class=\"n\">group\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"s1\">'com.example'\u003C/span>\n\u003Cspan class=\"n\">version\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"s1\">'0.0.1-SNAPSHOT'\u003C/span>\n\u003Cspan class=\"n\">sourceCompatibility\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"s1\">'17'\u003C/span>\n\n\u003Cspan class=\"n\">configurations\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\t\u003Cspan class=\"n\">compileOnly\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\t\t\u003Cspan class=\"n\">extendsFrom\u003C/span> \u003Cspan class=\"n\">annotationProcessor\u003C/span>\n\t\u003Cspan class=\"o\">}\u003C/span>\n\u003Cspan class=\"o\">}\u003C/span>\n\n\u003Cspan class=\"k\">repositories\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\t\u003Cspan class=\"n\">mavenCentral\u003C/span>\u003Cspan class=\"o\">()\u003C/span>\n\t\u003Cspan class=\"n\">maven\u003C/span> \u003Cspan class=\"o\">{\u003C/span> \u003Cspan class=\"n\">url\u003C/span> \u003Cspan class=\"s1\">'https://repo.spring.io/milestone'\u003C/span> \u003Cspan class=\"o\">}\u003C/span>\n\t\u003Cspan class=\"n\">maven\u003C/span> \u003Cspan class=\"o\">{\u003C/span> \u003Cspan class=\"n\">url\u003C/span> \u003Cspan class=\"s1\">'https://repo.spring.io/snapshot'\u003C/span> \u003Cspan class=\"o\">}\u003C/span>\n\u003Cspan class=\"o\">}\u003C/span>\n\n\u003Cspan class=\"k\">dependencies\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\t\u003Cspan class=\"n\">implementation\u003C/span> \u003Cspan class=\"s1\">'org.springframework.boot:spring-boot-starter-web'\u003C/span>\n\t\u003Cspan class=\"n\">implementation\u003C/span> \u003Cspan class=\"s1\">'com.amazonaws:aws-java-sdk-bom:1.12.320'\u003C/span>\n\t\u003Cspan class=\"n\">implementation\u003C/span> \u003Cspan class=\"s1\">'com.amazonaws:aws-java-sdk-sqs:1.12.320'\u003C/span>\n\t\u003Cspan class=\"n\">compileOnly\u003C/span> \u003Cspan class=\"s1\">'org.projectlombok:lombok'\u003C/span>\n\t\u003Cspan class=\"n\">annotationProcessor\u003C/span> \u003Cspan class=\"s1\">'org.projectlombok:lombok'\u003C/span>\n\t\u003Cspan class=\"n\">testImplementation\u003C/span> \u003Cspan class=\"s1\">'org.springframework.boot:spring-boot-starter-test'\u003C/span>\n\u003Cspan class=\"o\">}\u003C/span>\n\n\u003Cspan class=\"n\">tasks\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">named\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s1\">'test'\u003C/span>\u003Cspan class=\"o\">)\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\t\u003Cspan class=\"n\">useJUnitPlatform\u003C/span>\u003Cspan class=\"o\">()\u003C/span>\n\u003Cspan class=\"o\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch2 data-sourcepos=\"67:1-67:18\">\n\u003Cspan id=\"aws側の設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#aws%E5%81%B4%E3%81%AE%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>AWS側の設定\u003C/h2>\n\u003Ch4 data-sourcepos=\"69:1-69:29\">\n\u003Cspan id=\"iamユーザーの作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#iam%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>IAMユーザーの作成\u003C/h4>\n\u003Cp data-sourcepos=\"70:1-71:81\">事前にJavaからアクセスするためのIAMユーザーを作成し、アクセスキーとシークレットキーをダウンロードしておきます。\u003Cbr>\nそのIAMユーザーを使用してコンロールでSQS等を作成します。\u003C/p>\n\u003Ch4 data-sourcepos=\"73:1-73:29\">\n\u003Cspan id=\"sqsのキューを作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#sqs%E3%81%AE%E3%82%AD%E3%83%A5%E3%83%BC%E3%82%92%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>SQSのキューを作成\u003C/h4>\n\u003Cp data-sourcepos=\"74:1-76:139\">コンソールでSQSのキューを作成します\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Ffe5c311d-d5d2-9077-65ea-c8da1384a74b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f70120e0d433d10d74b81821cc6ce68e\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Ffe5c311d-d5d2-9077-65ea-c8da1384a74b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f70120e0d433d10d74b81821cc6ce68e\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Ffe5c311d-d5d2-9077-65ea-c8da1384a74b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0df5bd8dd26b1ad87c9881abf84bce2c 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/fe5c311d-d5d2-9077-65ea-c8da1384a74b.png\" loading=\"lazy\">\u003C/a>\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F7663fdfc-7dec-45bc-23f0-77f2b40e4916.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1d6a3c834d222df6c6e400f07b6642db\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F7663fdfc-7dec-45bc-23f0-77f2b40e4916.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=1d6a3c834d222df6c6e400f07b6642db\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F7663fdfc-7dec-45bc-23f0-77f2b40e4916.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c5a4a24e3768579fadab54b67050de8f 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/7663fdfc-7dec-45bc-23f0-77f2b40e4916.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch4 data-sourcepos=\"78:1-78:20\">\n\u003Cspan id=\"lambdaを作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#lambda%E3%82%92%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>lambdaを作成\u003C/h4>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F30d1c6db-925c-0f01-8c5e-5607cc2638c5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bb4e8a1a1ef9b1286378de43f73f75f7\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F30d1c6db-925c-0f01-8c5e-5607cc2638c5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=bb4e8a1a1ef9b1286378de43f73f75f7\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F30d1c6db-925c-0f01-8c5e-5607cc2638c5.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=e4bab109f2118370ae19051923d94a77 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/30d1c6db-925c-0f01-8c5e-5607cc2638c5.png\" loading=\"lazy\">\u003C/a>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Ff92d2a1e-aabe-7d80-b418-582c7cc4447e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ea4a0fcca585c578a715e3d6d4d2c2f3\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Ff92d2a1e-aabe-7d80-b418-582c7cc4447e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ea4a0fcca585c578a715e3d6d4d2c2f3\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Ff92d2a1e-aabe-7d80-b418-582c7cc4447e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=47b0760a1e7dc53ee47ae759fda78597 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/f92d2a1e-aabe-7d80-b418-582c7cc4447e.png\" loading=\"lazy\">\u003C/a>\n\u003Ch4 data-sourcepos=\"82:1-82:32\">\n\u003Cspan id=\"iamロールを作成する\" class=\"fragment\">\u003C/span>\u003Ca href=\"#iam%E3%83%AD%E3%83%BC%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>IAMロールを作成する\u003C/h4>\n\u003Cp data-sourcepos=\"83:1-85:244\">lambdaからSQSを読み取りするのでIAMロールを作成します。\u003Cbr>\nこちらを参考にさせていただきました。\u003Cbr>\n\u003Ca href=\"https://www.stsd.co.jp/dev-blog/send_and_receive_amazon_sqs_messages_from_java.html#:~:text=SQS%E3%81%AB%E3%81%AFJava%E3%81%A7,%E3%82%A2%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%80%8D%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%BE%E3%81%99%E3%80%82\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.stsd.co.jp/dev-blog/send_and_receive_amazon_sqs_messages_from_java.html#:~:text=SQS%E3%81%AB%E3%81%AFJava%E3%81%A7,%E3%82%A2%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%80%8D%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%BE%E3%81%99%E3%80%82\u003C/a>\u003C/p>\n\u003Cul data-sourcepos=\"87:1-90:0\">\n\u003Cli data-sourcepos=\"87:1-87:24\">ロール名：for-sqs\u003C/li>\n\u003Cli data-sourcepos=\"88:1-88:30\">ポリシー名：sqs-policy\u003C/li>\n\u003Cli data-sourcepos=\"89:1-90:0\">ポリシー\u003C/li>\n\u003C/ul>\n\u003Cdiv class=\"code-frame\" data-lang=\"json\" data-sourcepos=\"91:1-107:3\">\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"p\">{\u003C/span>\u003Cspan class=\"w\">\n    \u003C/span>\u003Cspan class=\"nl\">\"Version\"\u003C/span>\u003Cspan class=\"p\">:\u003C/span>\u003Cspan class=\"w\"> \u003C/span>\u003Cspan class=\"s2\">\"2012-10-17\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\u003Cspan class=\"w\">\n    \u003C/span>\u003Cspan class=\"nl\">\"Statement\"\u003C/span>\u003Cspan class=\"p\">:\u003C/span>\u003Cspan class=\"w\"> \u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"w\">\n        \u003C/span>\u003Cspan class=\"p\">{\u003C/span>\u003Cspan class=\"w\">\n            \u003C/span>\u003Cspan class=\"nl\">\"Sid\"\u003C/span>\u003Cspan class=\"p\">:\u003C/span>\u003Cspan class=\"w\"> \u003C/span>\u003Cspan class=\"s2\">\"VisualEditor0\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\u003Cspan class=\"w\">\n            \u003C/span>\u003Cspan class=\"nl\">\"Effect\"\u003C/span>\u003Cspan class=\"p\">:\u003C/span>\u003Cspan class=\"w\"> \u003C/span>\u003Cspan class=\"s2\">\"Allow\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\u003Cspan class=\"w\">\n            \u003C/span>\u003Cspan class=\"nl\">\"Action\"\u003C/span>\u003Cspan class=\"p\">:\u003C/span>\u003Cspan class=\"w\"> \u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"w\">\n                \u003C/span>\u003Cspan class=\"s2\">\"sqs:DeleteMessage\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\u003Cspan class=\"w\">\n                \u003C/span>\u003Cspan class=\"s2\">\"sqs:ReceiveMessage\"\u003C/span>\u003Cspan class=\"p\">,\u003C/span>\u003Cspan class=\"w\">\n                \u003C/span>\u003Cspan class=\"s2\">\"sqs:GetQueueAttributes\"\u003C/span>\u003Cspan class=\"w\">\n            \u003C/span>\u003Cspan class=\"p\">],\u003C/span>\u003Cspan class=\"w\">\n            \u003C/span>\u003Cspan class=\"nl\">\"Resource\"\u003C/span>\u003Cspan class=\"p\">:\u003C/span>\u003Cspan class=\"w\"> \u003C/span>\u003Cspan class=\"s2\">\"*\"\u003C/span>\u003Cspan class=\"w\">\n        \u003C/span>\u003Cspan class=\"p\">}\u003C/span>\u003Cspan class=\"w\">\n    \u003C/span>\u003Cspan class=\"p\">]\u003C/span>\u003Cspan class=\"w\">\n\u003C/span>\u003Cspan class=\"p\">}\u003C/span>\u003Cspan class=\"w\">\n\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\u003C/div>\n\u003Cp data-sourcepos=\"109:1-109:127\">またロールにAWSLambdaBasicExecutionRoleをアタッチしておくと、CloudWatchログにログを書き込めます。\u003C/p>\n\u003Ch4 data-sourcepos=\"111:1-111:35\">\n\u003Cspan id=\"lambdaにiamロールの設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#lambda%E3%81%ABiam%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%AE%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>lambdaにIAMロールの設定\u003C/h4>\n\u003Cp data-sourcepos=\"112:1-113:139\">コンロールのlambdaのページを開き、設定タブ &gt; アクセス権限 &gt; 実行ロール　&gt; 編集ボタンで設定します。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F9381367d-9a6d-807a-d60e-767a49a9310f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=db6a488729dd5a79c202b6d793efc7fe\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F9381367d-9a6d-807a-d60e-767a49a9310f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=db6a488729dd5a79c202b6d793efc7fe\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F9381367d-9a6d-807a-d60e-767a49a9310f.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=f164003c8f2eca30894bbe230164c96c 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/9381367d-9a6d-807a-d60e-767a49a9310f.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch4 data-sourcepos=\"115:1-115:38\">\n\u003Cspan id=\"sqsでlambdaトリガーを設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#sqs%E3%81%A7lambda%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>SQSでLambdaトリガーを設定\u003C/h4>\n\u003Cp data-sourcepos=\"116:1-117:139\">SQSのページで作成したキューを選択し、Lambdaトリガータブからlambdaを設定します。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F223d2b08-00ab-8432-b331-d2fc2f9b065b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=cfa876dbeea9ea23e63dfbb1dd9645e0\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F223d2b08-00ab-8432-b331-d2fc2f9b065b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=cfa876dbeea9ea23e63dfbb1dd9645e0\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F223d2b08-00ab-8432-b331-d2fc2f9b065b.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=c72f9159a06715f6666cfd3bc35bc763 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/223d2b08-00ab-8432-b331-d2fc2f9b065b.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Cp data-sourcepos=\"120:1-120:42\">これでaws側の設定は完了です。\u003C/p>\n\u003Ch2 data-sourcepos=\"122:1-122:9\">\n\u003Cspan id=\"実装\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%AE%9F%E8%A3%85\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>実装\u003C/h2>\n\u003Ch4 data-sourcepos=\"124:1-124:14\">\n\u003Cspan id=\"sqsclient\" class=\"fragment\">\u003C/span>\u003Ca href=\"#sqsclient\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>SqsClient\u003C/h4>\n\u003Cp data-sourcepos=\"125:1-126:92\">こちらを参考にしました。\u003Cbr>\n\u003Ca href=\"https://docs.aws.amazon.com/ja_jp/sdk-for-java/v1/developer-guide/examples-sqs-messages.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.aws.amazon.com/ja_jp/sdk-for-java/v1/developer-guide/examples-sqs-messages.html\u003C/a>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"Java\" data-sourcepos=\"128:1-178:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">SqsClient.java\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"kn\">package\u003C/span> \u003Cspan class=\"nn\">com.example.lambdasqssample.aws\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.auth.AWSStaticCredentialsProvider\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.regions.Regions\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.services.sqs.AmazonSQS\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.services.sqs.AmazonSQSClientBuilder\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.services.sqs.model.AmazonSQSException\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.services.sqs.model.CreateQueueRequest\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.services.sqs.model.SendMessageRequest\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.stereotype.Component\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n\u003Cspan class=\"nd\">@Component\u003C/span>\n\u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">SqsClient\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\n    \u003Cspan class=\"kd\">private\u003C/span> \u003Cspan class=\"kd\">static\u003C/span> \u003Cspan class=\"kd\">final\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"no\">QUEUE_NAME\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"s\">\"merge-data-sqs\"\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n    \u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"nf\">getQueueUrl\u003C/span>\u003Cspan class=\"o\">()\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n        \u003Cspan class=\"kt\">var\u003C/span> \u003Cspan class=\"n\">sqs\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"n\">getSqs\u003C/span>\u003Cspan class=\"o\">();\u003C/span>\n        \u003Cspan class=\"kt\">var\u003C/span> \u003Cspan class=\"n\">create_request\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"k\">new\u003C/span> \u003Cspan class=\"nc\">CreateQueueRequest\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"no\">QUEUE_NAME\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">addAttributesEntry\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"DelaySeconds\"\u003C/span>\u003Cspan class=\"o\">,\u003C/span> \u003Cspan class=\"s\">\"60\"\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">addAttributesEntry\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"MessageRetentionPeriod\"\u003C/span>\u003Cspan class=\"o\">,\u003C/span> \u003Cspan class=\"s\">\"86400\"\u003C/span>\u003Cspan class=\"o\">);\u003C/span>\n\n        \u003Cspan class=\"k\">try\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n            \u003Cspan class=\"n\">sqs\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">createQueue\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"n\">create_request\u003C/span>\u003Cspan class=\"o\">);\u003C/span>\n        \u003Cspan class=\"o\">}\u003C/span> \u003Cspan class=\"k\">catch\u003C/span> \u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"nc\">AmazonSQSException\u003C/span> \u003Cspan class=\"n\">e\u003C/span>\u003Cspan class=\"o\">)\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n            \u003Cspan class=\"k\">if\u003C/span> \u003Cspan class=\"o\">(!\u003C/span>\u003Cspan class=\"n\">e\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">getErrorCode\u003C/span>\u003Cspan class=\"o\">().\u003C/span>\u003Cspan class=\"na\">equals\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"QueueAlreadyExists\"\u003C/span>\u003Cspan class=\"o\">))\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n                \u003Cspan class=\"k\">throw\u003C/span> \u003Cspan class=\"n\">e\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n            \u003Cspan class=\"o\">}\u003C/span>\n        \u003Cspan class=\"o\">}\u003C/span>\n        \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"n\">sqs\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">getQueueUrl\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"no\">QUEUE_NAME\u003C/span>\u003Cspan class=\"o\">).\u003C/span>\u003Cspan class=\"na\">getQueueUrl\u003C/span>\u003Cspan class=\"o\">();\u003C/span>\n    \u003Cspan class=\"o\">}\u003C/span>\n\n    \u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kt\">void\u003C/span> \u003Cspan class=\"nf\">sendMessage\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"n\">queueUrl\u003C/span>\u003Cspan class=\"o\">)\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n        \u003Cspan class=\"kt\">var\u003C/span> \u003Cspan class=\"n\">sqs\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"n\">getSqs\u003C/span>\u003Cspan class=\"o\">();\u003C/span>\n        \u003Cspan class=\"kt\">var\u003C/span> \u003Cspan class=\"n\">send_msg_request\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"k\">new\u003C/span> \u003Cspan class=\"nc\">SendMessageRequest\u003C/span>\u003Cspan class=\"o\">()\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">withQueueUrl\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"n\">queueUrl\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">withMessageBody\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"hello world\"\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">withDelaySeconds\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"mi\">5\u003C/span>\u003Cspan class=\"o\">);\u003C/span>\n        \u003Cspan class=\"n\">sqs\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">sendMessage\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"n\">send_msg_request\u003C/span>\u003Cspan class=\"o\">);\u003C/span>\n    \u003Cspan class=\"o\">}\u003C/span>\n\n    \u003Cspan class=\"kd\">private\u003C/span> \u003Cspan class=\"nc\">AmazonSQS\u003C/span> \u003Cspan class=\"nf\">getSqs\u003C/span>\u003Cspan class=\"o\">()\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n        \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"nc\">AmazonSQSClientBuilder\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">standard\u003C/span>\u003Cspan class=\"o\">()\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">withCredentials\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"k\">new\u003C/span> \u003Cspan class=\"nc\">AWSStaticCredentialsProvider\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"nc\">Credentials\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">get\u003C/span>\u003Cspan class=\"o\">()))\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">withRegion\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"nc\">Regions\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">AP_NORTHEAST_1\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">getName\u003C/span>\u003Cspan class=\"o\">())\u003C/span>\n                \u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">build\u003C/span>\u003Cspan class=\"o\">();\u003C/span>\n    \u003Cspan class=\"o\">}\u003C/span>\n\u003Cspan class=\"o\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"code-frame\" data-lang=\"Java\" data-sourcepos=\"180:1-209:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">Credentials.java\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"kn\">package\u003C/span> \u003Cspan class=\"nn\">com.example.lambdasqssample.aws\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.auth.AWSCredentials\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.amazonaws.auth.BasicAWSCredentials\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.beans.factory.annotation.Value\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.stereotype.Component\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n\u003Cspan class=\"nd\">@Component\u003C/span>\n\u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">Credentials\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\n    \u003Cspan class=\"kd\">private\u003C/span> \u003Cspan class=\"kd\">static\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"no\">ACCESS_KEY\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n    \u003Cspan class=\"kd\">private\u003C/span> \u003Cspan class=\"kd\">static\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"no\">SECRET_KEY\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n    \u003Cspan class=\"nd\">@Value\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"${aws.access-key}\"\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n    \u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kt\">void\u003C/span> \u003Cspan class=\"nf\">setAccessKey\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"n\">accessKey\u003C/span>\u003Cspan class=\"o\">)\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n        \u003Cspan class=\"k\">this\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">ACCESS_KEY\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"n\">accessKey\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n    \u003Cspan class=\"o\">}\u003C/span>\n\n    \u003Cspan class=\"nd\">@Value\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"${aws.secret-key}\"\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n    \u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kt\">void\u003C/span> \u003Cspan class=\"nf\">setSecretKey\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"n\">secretKey\u003C/span>\u003Cspan class=\"o\">)\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n        \u003Cspan class=\"k\">this\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">SECRET_KEY\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"n\">secretKey\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n    \u003Cspan class=\"o\">}\u003C/span>\n\n    \u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kd\">static\u003C/span> \u003Cspan class=\"nc\">AWSCredentials\u003C/span> \u003Cspan class=\"nf\">get\u003C/span>\u003Cspan class=\"o\">()\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n        \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"k\">new\u003C/span> \u003Cspan class=\"nf\">BasicAWSCredentials\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"no\">ACCESS_KEY\u003C/span>\u003Cspan class=\"o\">,\u003C/span> \u003Cspan class=\"no\">SECRET_KEY\u003C/span>\u003Cspan class=\"o\">);\u003C/span>\n    \u003Cspan class=\"o\">}\u003C/span>\n\u003Cspan class=\"o\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"210:1-210:71\">ACCESS_KEYとSECRET_KEYはapplication.ymlで設定しておきます。\u003C/p>\n\u003Ch4 data-sourcepos=\"212:1-212:20\">\n\u003Cspan id=\"実行クラス\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%AE%9F%E8%A1%8C%E3%82%AF%E3%83%A9%E3%82%B9\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>実行クラス\u003C/h4>\n\u003Cp data-sourcepos=\"213:1-213:65\">QueueのUrlを受け取り、メッセージを送信します。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"214:1-238:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">SampleController.java\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"kn\">package\u003C/span> \u003Cspan class=\"nn\">com.example.lambdasqssample.Controller\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">com.example.lambdasqssample.aws.SqsClient\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">lombok.RequiredArgsConstructor\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.web.bind.annotation.GetMapping\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.web.bind.annotation.RequestMapping\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\u003Cspan class=\"kn\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.web.bind.annotation.RestController\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n\u003Cspan class=\"nd\">@RestController\u003C/span>\n\u003Cspan class=\"nd\">@RequestMapping\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"/api/v1/sample\"\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n\u003Cspan class=\"nd\">@RequiredArgsConstructor\u003C/span>\n\u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">SampleController\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n\n    \u003Cspan class=\"kd\">private\u003C/span> \u003Cspan class=\"kd\">final\u003C/span> \u003Cspan class=\"nc\">SqsClient\u003C/span> \u003Cspan class=\"n\">sqsClient\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n\n    \u003Cspan class=\"nd\">@GetMapping\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"s\">\"/result\"\u003C/span>\u003Cspan class=\"o\">)\u003C/span>\n    \u003Cspan class=\"kd\">public\u003C/span> \u003Cspan class=\"kt\">boolean\u003C/span> \u003Cspan class=\"nf\">getResult\u003C/span>\u003Cspan class=\"o\">()\u003C/span> \u003Cspan class=\"o\">{\u003C/span>\n        \u003Cspan class=\"kt\">var\u003C/span> \u003Cspan class=\"n\">queue\u003C/span> \u003Cspan class=\"o\">=\u003C/span> \u003Cspan class=\"n\">sqsClient\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">getQueueUrl\u003C/span>\u003Cspan class=\"o\">();\u003C/span>\n        \u003Cspan class=\"n\">sqsClient\u003C/span>\u003Cspan class=\"o\">.\u003C/span>\u003Cspan class=\"na\">sendMessage\u003C/span>\u003Cspan class=\"o\">(\u003C/span>\u003Cspan class=\"n\">queue\u003C/span>\u003Cspan class=\"o\">);\u003C/span>\n        \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"kc\">true\u003C/span>\u003Cspan class=\"o\">;\u003C/span>\n    \u003Cspan class=\"o\">}\u003C/span>\n\n\u003Cspan class=\"o\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"239:1-239:33\">これで実装は完了です。\u003C/p>\n\u003Ch2 data-sourcepos=\"241:1-241:9\">\n\u003Cspan id=\"実行\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%AE%9F%E8%A1%8C\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>実行\u003C/h2>\n\u003Cp data-sourcepos=\"242:1-244:139\">アプリケーションをビルド・実行します。\u003Cbr>\n今回はpostmanを使用して\u003Ccode>http://localhost:8080/api/v1/sample/result\u003C/code>にGETします。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F55181993-ed75-b898-e461-6f609eeaee42.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f221196d76e8f7d1094b957ee0be99de\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F55181993-ed75-b898-e461-6f609eeaee42.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=f221196d76e8f7d1094b957ee0be99de\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F55181993-ed75-b898-e461-6f609eeaee42.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b91ae4761053fcabb691c510a646b1d1 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/55181993-ed75-b898-e461-6f609eeaee42.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Cp data-sourcepos=\"246:1-247:139\">CloudWatchログを見ると、アクセスするたびに実行されていることがわかります。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Feb9aaece-5e01-4e88-8db3-7ee9986f0afd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=48923ede9bbd488114c93baa32eae111\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Feb9aaece-5e01-4e88-8db3-7ee9986f0afd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=48923ede9bbd488114c93baa32eae111\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2Feb9aaece-5e01-4e88-8db3-7ee9986f0afd.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=b3820bccc9d24be7f60dc4fe9e797c89 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/eb9aaece-5e01-4e88-8db3-7ee9986f0afd.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch1 data-sourcepos=\"249:1-249:14\">\n\u003Cspan id=\"さいごに\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>さいごに\u003C/h1>\n\u003Cp data-sourcepos=\"250:1-250:135\">まだlambdaで具体的な処理を実行していないですが、とりあえず動くことを確認できた第一歩でした。\u003C/p>\n","# 前提\n業務でこんな処理を実装する気がするので、簡単に予習してみます。\n今回は動くか検証のみなので、ローカルで起動したJavaアプリケーション（Spring Boot）からSQSにメッセージを送信してみます。\n\n本当はlambdaからrdsへ登録・更新する処理を実装したかったのですが、それはまた別の機会に。（なのでSQSやlambdaの名前がmergeXXXXみたいになってます。）\n\n![lambda-sqs.drawio.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/3a229f2f-f2b9-d425-1c1e-6ec78dd46b8e.png)\n\n# 環境\n- macOS: 12.6\n- IntelliJ IDEA: 2022.2.3 (Community Edition)\n- Gradle: 7.5\n- Java: temurin 17.0.3\n\n# 手順\n\n## プロジェクトの作成\n\n#### spring initializrでプロジェクト作成\n[https://start.spring.io/](https://start.spring.io/)でプロジェクトの雛形を作成します。\n以下の画像のような構成にしています。\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/c2e5604c-71a3-5af3-dea0-c307670cd33e.png\">\n\nGENERATEボタンを押してダウンロードしてきます。それをIDEツールで開きます。\n\n#### build.gradleの設定\n`com.amazonaws:aws-java-sdk-bom`と`com.amazonaws:aws-java-sdk-sqs`を設定します。\nこの時点ではどちらも1.12.320が最新でした。\n\n```gradle:build.gradle\nplugins {\n\tid 'org.springframework.boot' version '2.7.5-SNAPSHOT'\n\tid 'io.spring.dependency-management' version '1.0.14.RELEASE'\n\tid 'java'\n}\n\ngroup = 'com.example'\nversion = '0.0.1-SNAPSHOT'\nsourceCompatibility = '17'\n\nconfigurations {\n\tcompileOnly {\n\t\textendsFrom annotationProcessor\n\t}\n}\n\nrepositories {\n\tmavenCentral()\n\tmaven { url 'https://repo.spring.io/milestone' }\n\tmaven { url 'https://repo.spring.io/snapshot' }\n}\n\ndependencies {\n\timplementation 'org.springframework.boot:spring-boot-starter-web'\n\timplementation 'com.amazonaws:aws-java-sdk-bom:1.12.320'\n\timplementation 'com.amazonaws:aws-java-sdk-sqs:1.12.320'\n\tcompileOnly 'org.projectlombok:lombok'\n\tannotationProcessor 'org.projectlombok:lombok'\n\ttestImplementation 'org.springframework.boot:spring-boot-starter-test'\n}\n\ntasks.named('test') {\n\tuseJUnitPlatform()\n}\n```\n\n## AWS側の設定\n\n#### IAMユーザーの作成\n事前にJavaからアクセスするためのIAMユーザーを作成し、アクセスキーとシークレットキーをダウンロードしておきます。\nそのIAMユーザーを使用してコンロールでSQS等を作成します。\n\n#### SQSのキューを作成\nコンソールでSQSのキューを作成します\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/fe5c311d-d5d2-9077-65ea-c8da1384a74b.png\">\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/7663fdfc-7dec-45bc-23f0-77f2b40e4916.png\">\n\n#### lambdaを作成\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/30d1c6db-925c-0f01-8c5e-5607cc2638c5.png\">\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/f92d2a1e-aabe-7d80-b418-582c7cc4447e.png\">\n\n#### IAMロールを作成する\nlambdaからSQSを読み取りするのでIAMロールを作成します。\nこちらを参考にさせていただきました。\nhttps://www.stsd.co.jp/dev-blog/send_and_receive_amazon_sqs_messages_from_java.html#:~:text=SQS%E3%81%AB%E3%81%AFJava%E3%81%A7,%E3%82%A2%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%80%8D%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%BE%E3%81%99%E3%80%82\n\n- ロール名：for-sqs\n- ポリシー名：sqs-policy\n- ポリシー\n\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"sqs:DeleteMessage\",\n                \"sqs:ReceiveMessage\",\n                \"sqs:GetQueueAttributes\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```\n\nまたロールにAWSLambdaBasicExecutionRoleをアタッチしておくと、CloudWatchログにログを書き込めます。\n\n#### lambdaにIAMロールの設定\nコンロールのlambdaのページを開き、設定タブ > アクセス権限 > 実行ロール　> 編集ボタンで設定します。\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/9381367d-9a6d-807a-d60e-767a49a9310f.png\">\n\n#### SQSでLambdaトリガーを設定\nSQSのページで作成したキューを選択し、Lambdaトリガータブからlambdaを設定します。\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/223d2b08-00ab-8432-b331-d2fc2f9b065b.png\">\n\n\nこれでaws側の設定は完了です。\n\n## 実装\n\n#### SqsClient\nこちらを参考にしました。\nhttps://docs.aws.amazon.com/ja_jp/sdk-for-java/v1/developer-guide/examples-sqs-messages.html\n\n```Java:SqsClient.java\npackage com.example.lambdasqssample.aws;\n\nimport com.amazonaws.auth.AWSStaticCredentialsProvider;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.sqs.AmazonSQS;\nimport com.amazonaws.services.sqs.AmazonSQSClientBuilder;\nimport com.amazonaws.services.sqs.model.AmazonSQSException;\nimport com.amazonaws.services.sqs.model.CreateQueueRequest;\nimport com.amazonaws.services.sqs.model.SendMessageRequest;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class SqsClient {\n\n    private static final String QUEUE_NAME = \"merge-data-sqs\";\n\n    public String getQueueUrl() {\n        var sqs = getSqs();\n        var create_request = new CreateQueueRequest(QUEUE_NAME)\n                .addAttributesEntry(\"DelaySeconds\", \"60\")\n                .addAttributesEntry(\"MessageRetentionPeriod\", \"86400\");\n\n        try {\n            sqs.createQueue(create_request);\n        } catch (AmazonSQSException e) {\n            if (!e.getErrorCode().equals(\"QueueAlreadyExists\")) {\n                throw e;\n            }\n        }\n        return sqs.getQueueUrl(QUEUE_NAME).getQueueUrl();\n    }\n\n    public void sendMessage(String queueUrl) {\n        var sqs = getSqs();\n        var send_msg_request = new SendMessageRequest()\n                .withQueueUrl(queueUrl)\n                .withMessageBody(\"hello world\")\n                .withDelaySeconds(5);\n        sqs.sendMessage(send_msg_request);\n    }\n\n    private AmazonSQS getSqs() {\n        return AmazonSQSClientBuilder\n                .standard()\n                .withCredentials(new AWSStaticCredentialsProvider(Credentials.get()))\n                .withRegion(Regions.AP_NORTHEAST_1.getName())\n                .build();\n    }\n}\n```\n\n```Java:Credentials.java\npackage com.example.lambdasqssample.aws;\n\nimport com.amazonaws.auth.AWSCredentials;\nimport com.amazonaws.auth.BasicAWSCredentials;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class Credentials {\n\n    private static String ACCESS_KEY;\n\n    private static String SECRET_KEY;\n\n    @Value(\"${aws.access-key}\")\n    public void setAccessKey(String accessKey) {\n        this.ACCESS_KEY = accessKey;\n    }\n\n    @Value(\"${aws.secret-key}\")\n    public void setSecretKey(String secretKey) {\n        this.SECRET_KEY = secretKey;\n    }\n\n    public static AWSCredentials get() {\n        return new BasicAWSCredentials(ACCESS_KEY, SECRET_KEY);\n    }\n}\n```\nACCESS_KEYとSECRET_KEYはapplication.ymlで設定しておきます。\n\n#### 実行クラス\nQueueのUrlを受け取り、メッセージを送信します。\n```java:SampleController.java\npackage com.example.lambdasqssample.Controller;\n\nimport com.example.lambdasqssample.aws.SqsClient;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/api/v1/sample\")\n@RequiredArgsConstructor\npublic class SampleController {\n\n    private final SqsClient sqsClient;\n\n    @GetMapping(\"/result\")\n    public boolean getResult() {\n        var queue = sqsClient.getQueueUrl();\n        sqsClient.sendMessage(queue);\n        return true;\n    }\n\n}\n```\nこれで実装は完了です。\n\n## 実行\nアプリケーションをビルド・実行します。\n今回はpostmanを使用して`http://localhost:8080/api/v1/sample/result`にGETします。\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/55181993-ed75-b898-e461-6f609eeaee42.png\">\n\nCloudWatchログを見ると、アクセスするたびに実行されていることがわかります。\n\u003Cimg width=\"600\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/eb9aaece-5e01-4e88-8db3-7ee9986f0afd.png\">\n\n# さいごに\nまだlambdaで具体的な処理を実行していないですが、とりあえず動くことを確認できた第一歩でした。\n\n",false,0,"2022-10-15T17:08:00+09:00",null,"5f5fa349a86326ac1c5c",1,[13,16,19,22,25],{"name":14,"versions":15},"Java",[],{"name":17,"versions":18},"AWS",[],{"name":20,"versions":21},"lambda",[],{"name":23,"versions":24},"sqs",[],{"name":26,"versions":27},"SpringBoot",[],"JavaプロジェクトからSQSにキューを送信してlambdaをキックする","https://qiita.com/y5347M/items/5f5fa349a86326ac1c5c",{"description":31,"facebook_id":32,"followees_count":33,"followers_count":11,"github_login_name":34,"id":34,"items_count":35,"linkedin_id":32,"location":32,"name":34,"organization":32,"permanent_id":36,"profile_image_url":37,"team_only":6,"twitter_screen_name":38,"website_url":39},"バックエンドエンジニアをしています。","",5,"y5347M",18,2433961,"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/2433961/a4773675e7566e225738c8c15f9fda53e35bd799/large.png?1741427719","mmmm16089306","https://twitter.com/mmmm16089306",3088,{"description":31,"facebook_id":32,"followees_count":33,"followers_count":11,"github_login_name":34,"id":34,"items_count":35,"linkedin_id":32,"location":32,"name":34,"organization":32,"permanent_id":36,"profile_image_url":37,"team_only":6,"twitter_screen_name":38,"website_url":39,"image_monthly_upload_limit":42,"image_monthly_upload_remaining":43},104857600,101432560,1745893162280]