[{"data":1,"prerenderedAt":36},["ShallowReactive",2],{"useQiitaArticleDetailFetcher-17a3198a2eb553844634":3,"useQiitaAuthorizedUser":33},{"rendered_body":4,"body":5,"coediting":6,"comments_count":7,"created_at":8,"group":9,"id":10,"likes_count":7,"private":6,"reactions_count":7,"stocks_count":11,"tags":12,"title":19,"updated_at":20,"url":21,"user":22,"page_views_count":32,"team_membership":9,"organization_url_name":9,"slide":6},"\u003Ch1 data-sourcepos=\"1:1-1:8\">\n\u003Cspan id=\"前提\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%89%8D%E6%8F%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>前提\u003C/h1>\n\u003Cp data-sourcepos=\"2:1-4:150\">仕事ではずっとJavaで、たまにJavaScriptやPythonを使用してきました。\u003Cbr>\n「Kotlinはいいぞ(？)」という話をよく聞くので、チュートリアルをやってみます。\u003Cbr>\nJavaのSpring Bootをよく利用しているので、理解しやすいと思い、Kotlinでも同じフレームワークを使用してみます。\u003C/p>\n\u003Cp data-sourcepos=\"6:1-6:84\">チュートリアルは以下のサイトにあるものを実施してみます。\u003C/p>\n\u003Cp data-sourcepos=\"8:1-8:63\">\u003Ciframe id=\"qiita-embed-content__ce72e6a4829a52e213d088a9261050d8\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__ce72e6a4829a52e213d088a9261050d8\" data-content=\"https%3A%2F%2Fspring.pleiades.io%2Fguides%2Ftutorials%2Fspring-boot-kotlin%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Cp data-sourcepos=\"10:1-10:141\">コーディングルールがわからないときはこちらを参照。（間違っていたら指摘いただけると幸いです。）\u003C/p>\n\u003Cp data-sourcepos=\"12:1-12:69\">\u003Ciframe id=\"qiita-embed-content__9a879e6ea1e70a807b584d15a08ed51a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9a879e6ea1e70a807b584d15a08ed51a\" data-content=\"https%3A%2F%2Frunebook.dev%2Fja%2Fdocs%2Fkotlin%2Fdocs%2Freference%2Fcoding-conventions\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Ch1 data-sourcepos=\"14:1-14:8\">\n\u003Cspan id=\"環境\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E7%92%B0%E5%A2%83\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>環境\u003C/h1>\n\u003Cul data-sourcepos=\"15:1-20:0\">\n\u003Cli data-sourcepos=\"15:1-15:15\">macOS: 11.6.4\u003C/li>\n\u003Cli data-sourcepos=\"16:1-16:45\">IntelliJ IDEA: 2021.2.3 (Community Edition)\u003C/li>\n\u003Cli data-sourcepos=\"17:1-17:38\">Kotlin: 212-1.5.10-release-IJ5457.46\u003C/li>\n\u003Cli data-sourcepos=\"18:1-18:15\">Gradle: 7.4.1\u003C/li>\n\u003Cli data-sourcepos=\"19:1-20:0\">Java: temurin 17.0.3\u003C/li>\n\u003C/ul>\n\u003Ch1 data-sourcepos=\"21:1-21:8\">\n\u003Cspan id=\"手順\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%89%8B%E9%A0%86\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>手順\u003C/h1>\n\u003Ch2 data-sourcepos=\"22:1-22:45\">\n\u003Cspan id=\"新しいプロジェクトを作成する\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E6%96%B0%E3%81%97%E3%81%84%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>新しいプロジェクトを作成する\u003C/h2>\n\u003Cp data-sourcepos=\"23:1-23:299\">「Initializr Web サイトを利用する方法」「コマンドラインを使用する方法」「IntelliJ IDEA の使用」が紹介されています。今回は一番最初を使用します。一番最後はIntelliのUltimateエディションを利用することが条件のようです。\u003C/p>\n\u003Ch4 data-sourcepos=\"25:1-25:38\">\n\u003Cspan id=\"spring-initializerにアクセス\" class=\"fragment\">\u003C/span>\u003Ca href=\"#spring-initializer%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>spring initializerにアクセス\u003C/h4>\n\u003Cp data-sourcepos=\"26:1-26:24\">\u003Ciframe id=\"qiita-embed-content__32f9ffb788696595003ac198fd6dc26a\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__32f9ffb788696595003ac198fd6dc26a\" data-content=\"https%3A%2F%2Fstart.spring.io%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\">\n\u003C/iframe>\n\u003C/p>\n\u003Ch4 data-sourcepos=\"28:1-28:38\">\n\u003Cspan id=\"以下のパラメータを設定\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E4%BB%A5%E4%B8%8B%E3%81%AE%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%82%92%E8%A8%AD%E5%AE%9A\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>以下のパラメータを設定\u003C/h4>\n\u003Cul data-sourcepos=\"29:1-43:28\">\n\u003Cli data-sourcepos=\"29:1-29:27\">Project: \u003Ccode>Gradle Project\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"30:1-30:20\">Language: \u003Ccode>Kotlin\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"31:1-31:22\">Spring Boot: \u003Ccode>2.7.0\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"32:1-37:16\">Project Metadata\n\u003Cul data-sourcepos=\"33:5-37:16\">\n\u003Cli data-sourcepos=\"33:5-33:26\">Group: \u003Ccode>com.example\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"34:5-34:27\">Artifact/Name: \u003Ccode>blog\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"35:5-35:38\">Package name: \u003Ccode>com.example.blog\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"36:5-36:22\">Packaging: \u003Ccode>Jar\u003C/code>\n\u003C/li>\n\u003Cli data-sourcepos=\"37:5-37:16\">Java: \u003Ccode>17\u003C/code>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli data-sourcepos=\"38:1-43:28\">Dependencies:\n\u003Cul data-sourcepos=\"39:5-43:28\">\n\u003Cli data-sourcepos=\"39:5-39:18\">\u003Ccode>Spring Web\u003C/code>\u003C/li>\n\u003Cli data-sourcepos=\"40:5-40:16\">\u003Ccode>Mustache\u003C/code>\u003C/li>\n\u003Cli data-sourcepos=\"41:5-41:23\">\u003Ccode>Spring Data JPA\u003C/code>\u003C/li>\n\u003Cli data-sourcepos=\"42:5-42:19\">\u003Ccode>H2 Database\u003C/code>\u003C/li>\n\u003Cli data-sourcepos=\"43:5-43:28\">\u003Ccode>Spring Boot DevTools\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 data-sourcepos=\"44:1-44:45\">\n\u003Cspan id=\"生成ボタンgenerateをクリック\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E7%94%9F%E6%88%90%E3%83%9C%E3%82%BF%E3%83%B3generate%E3%82%92%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>生成ボタン(Generate)をクリック\u003C/h4>\n\u003Cp data-sourcepos=\"45:1-46:139\">blog.zipがダウンロードされます。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F15d748d3-047a-50c7-98e2-a2a363479586.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=02cef631df876db05445d11862cf1b77\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F15d748d3-047a-50c7-98e2-a2a363479586.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=02cef631df876db05445d11862cf1b77\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F15d748d3-047a-50c7-98e2-a2a363479586.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=5117ed5bca8e6013d37a45d39aa145e8 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/15d748d3-047a-50c7-98e2-a2a363479586.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch4 data-sourcepos=\"48:1-48:62\">\n\u003Cspan id=\"ダウンロードしたプロジェクトを展開する\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E5%B1%95%E9%96%8B%E3%81%99%E3%82%8B\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>ダウンロードしたプロジェクトを展開する\u003C/h4>\n\u003Cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"49:1-81:3\">\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>kotlin % unzip blog.zip \nArchive:  blog.zip\n   creating: blog/\n  inflating: blog/gradlew            \n   creating: blog/src/\n   creating: blog/src/test/\n   creating: blog/src/test/kotlin/\n   creating: blog/src/test/kotlin/com/\n   creating: blog/src/test/kotlin/com/example/\n   creating: blog/src/test/kotlin/com/example/blog/\n  inflating: blog/src/test/kotlin/com/example/blog/BlogApplicationTests.kt  \n   creating: blog/src/main/\n   creating: blog/src/main/kotlin/\n   creating: blog/src/main/kotlin/com/\n   creating: blog/src/main/kotlin/com/example/\n   creating: blog/src/main/kotlin/com/example/blog/\n  inflating: blog/src/main/kotlin/com/example/blog/BlogApplication.kt  \n   creating: blog/src/main/resources/\n   creating: blog/src/main/resources/templates/\n   creating: blog/src/main/resources/static/\n  inflating: blog/src/main/resources/application.properties  \n  inflating: blog/build.gradle.kts   \n   creating: blog/gradle/\n   creating: blog/gradle/wrapper/\n  inflating: blog/gradle/wrapper/gradle-wrapper.jar  \n  inflating: blog/gradle/wrapper/gradle-wrapper.properties  \n  inflating: blog/HELP.md            \n  inflating: blog/.gitignore         \n  inflating: blog/settings.gradle.kts  \n  inflating: blog/gradlew.bat        \nkotlin %\n\u003C/code>\u003C/pre>\u003C/div>\u003C/div>\n\u003Ch4 data-sourcepos=\"83:1-83:55\">\n\u003Cspan id=\"展開したプロジェクトをintellijで開く\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E5%B1%95%E9%96%8B%E3%81%97%E3%81%9F%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92intellij%E3%81%A7%E9%96%8B%E3%81%8F\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>展開したプロジェクトをIntelliJで開く\u003C/h4>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F9da2ce91-6ee2-28d9-6b5d-3a9ffd75e057.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e37222b4543f5722380576c7ad350fbe\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F9da2ce91-6ee2-28d9-6b5d-3a9ffd75e057.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e37222b4543f5722380576c7ad350fbe\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F9da2ce91-6ee2-28d9-6b5d-3a9ffd75e057.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=4d495332e21398f5c022cbb75cf804f9 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/9da2ce91-6ee2-28d9-6b5d-3a9ffd75e057.png\" loading=\"lazy\">\u003C/a>\n\u003Ch2 data-sourcepos=\"86:1-86:33\">\n\u003Cspan id=\"コントローラーの作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>コントローラーの作成\u003C/h2>\n\u003Cp data-sourcepos=\"87:1-87:52\">\u003Ccode>src/main/kotlin/com/example/blog/HtmlController.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"88:1-106:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">HtmlController.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.blog\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.stereotype.Controller\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.ui.Model\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.ui.set\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.web.bind.annotation.GetMapping\u003C/span>\n\n\u003Cspan class=\"nd\">@Controller\u003C/span>\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">HtmlController\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n  \u003Cspan class=\"nd\">@GetMapping\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"/\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n  \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">blog\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">Model\u003C/span>\u003Cspan class=\"p\">):\u003C/span> \u003Cspan class=\"nc\">String\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n    \u003Cspan class=\"n\">model\u003C/span>\u003Cspan class=\"p\">[\u003C/span>\u003Cspan class=\"s\">\"title\"\u003C/span>\u003Cspan class=\"p\">]\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">\"Blog\"\u003C/span>\n    \u003Cspan class=\"k\">return\u003C/span> \u003Cspan class=\"s\">\"blog\"\u003C/span>\n  \u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F133448fe-d0cb-03d2-a35b-be261411703e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0be9a807e3dd348f6f43085e6cc0a85b\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"300\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F133448fe-d0cb-03d2-a35b-be261411703e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=0be9a807e3dd348f6f43085e6cc0a85b\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F133448fe-d0cb-03d2-a35b-be261411703e.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=2b74016b547401be90c6bda9e1d2f5ec 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/133448fe-d0cb-03d2-a35b-be261411703e.png\" loading=\"lazy\">\u003C/a>\n\u003Ch2 data-sourcepos=\"109:1-109:38\">\n\u003Cspan id=\"mustacheテンプレートを作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#mustache%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>Mustacheテンプレートを作成\u003C/h2>\n\u003Cp data-sourcepos=\"110:1-110:46\">\u003Ccode>src/main/resources/templates/header.mustache\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"mustache\" data-sourcepos=\"111:1-117:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">header.mustache\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"nt\">&lt;html&gt;\u003C/span>\n\u003Cspan class=\"nt\">&lt;head&gt;\u003C/span>\n  \u003Cspan class=\"nt\">&lt;title&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/title&gt;\u003C/span>\n\u003Cspan class=\"nt\">&lt;/head&gt;\u003C/span>\n\u003Cspan class=\"nt\">&lt;body&gt;\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"118:1-118:46\">\u003Ccode>src/main/resources/templates/footer.mustache\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"mustache\" data-sourcepos=\"119:1-122:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">footer.mustache\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"nt\">&lt;/body&gt;\u003C/span>\n\u003Cspan class=\"nt\">&lt;/html&gt;\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"123:1-123:44\">\u003Ccode>src/main/resources/templates/blog.mustache\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"mustache\" data-sourcepos=\"124:1-128:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">blog.mustache\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">header\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\u003Cspan class=\"nt\">&lt;h1&gt;\u003C/span>\u003Cspan class=\"k\">{{\u003C/span>\u003Cspan class=\"nv\">title\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\u003Cspan class=\"nt\">&lt;/h1&gt;\u003C/span>\n\u003Cspan class=\"k\">{{&gt;\u003C/span> \u003Cspan class=\"nv\">footer\u003C/span>\u003Cspan class=\"k\">}}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F37708048-59fd-8a7c-4836-b3744b3a20e3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=9aac5bba5badcee5265530ae301c4270\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"300\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F37708048-59fd-8a7c-4836-b3744b3a20e3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=9aac5bba5badcee5265530ae301c4270\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F37708048-59fd-8a7c-4836-b3744b3a20e3.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=705046dbe719f5e5c9ca0349c8eab0bc 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/37708048-59fd-8a7c-4836-b3744b3a20e3.png\" loading=\"lazy\">\u003C/a>\n\u003Ch2 data-sourcepos=\"131:1-131:36\">\n\u003Cspan id=\"アプリケーションの起動\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E8%B5%B7%E5%8B%95\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>アプリケーションの起動\u003C/h2>\n\u003Ch4 data-sourcepos=\"132:1-132:72\">\n\u003Cspan id=\"blogapplicationktを選択してrun-blogapplicationktを実行\" class=\"fragment\">\u003C/span>\u003Ca href=\"#blogapplicationkt%E3%82%92%E9%81%B8%E6%8A%9E%E3%81%97%E3%81%A6run-blogapplicationkt%E3%82%92%E5%AE%9F%E8%A1%8C\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>\u003Ccode>BlogApplication.kt\u003C/code>を選択して\u003Ccode>Run BlogApplicationKt\u003C/code>を実行\u003C/h4>\n\u003Cp data-sourcepos=\"133:1-133:36\">しかしここでエラーが…。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"134:1-136:3\">\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>java.lang.UnsupportedClassVersionError: com/example/blog/BlogApplicationKt has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 60.0\n\u003C/code>\u003C/pre>\u003C/div>\u003C/div>\n\u003Cp data-sourcepos=\"137:1-137:176\">「このversionのJava Runtimeは60.0versionのclass fileしか認識できないけど、\u003Ccode>com/example/blog/BlogApplicationKt\u003C/code>は61.0だ」と怒られているようです。\u003C/p>\n\u003Cp data-sourcepos=\"139:1-140:139\">私のIntelliJ IDEAのJREがDefaultでJava16だったので、17に変更したら問題なく起動できました。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3565c46b-5eb6-59f9-3d4f-abdf82fb8054.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e07e600c6ee99d8ac462ea22afac907c\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3565c46b-5eb6-59f9-3d4f-abdf82fb8054.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=e07e600c6ee99d8ac462ea22afac907c\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F3565c46b-5eb6-59f9-3d4f-abdf82fb8054.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=da20ff67f31b33b6748eb9ed9d595251 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/3565c46b-5eb6-59f9-3d4f-abdf82fb8054.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Cp data-sourcepos=\"142:1-144:139\">\u003Ca href=\"http://localhost:8080/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://localhost:8080/\u003C/a>\u003Cbr>\nにアクセスすると、Blogと表示されています。\u003Cbr>\n\u003Ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F4f26386a-1127-4b9f-6a70-9cdc4ab8fad8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ba26b92ce555f12a9646baed8040dd23\" target=\"_blank\" rel=\"nofollow noopener\">\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F4f26386a-1127-4b9f-6a70-9cdc4ab8fad8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=ba26b92ce555f12a9646baed8040dd23\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2433961%2F4f26386a-1127-4b9f-6a70-9cdc4ab8fad8.png?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=93b5c57d9ef974777c12ac5a489bb255 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/4f26386a-1127-4b9f-6a70-9cdc4ab8fad8.png\" loading=\"lazy\">\u003C/a>\u003C/p>\n\u003Ch2 data-sourcepos=\"146:1-146:33\">\n\u003Cspan id=\"junit5を使用したテスト\" class=\"fragment\">\u003C/span>\u003Ca href=\"#junit5%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%83%86%E3%82%B9%E3%83%88\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>JUnit5を使用したテスト\u003C/h2>\n\u003Ch4 data-sourcepos=\"147:1-147:23\">\n\u003Cspan id=\"テストの作成\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テストの作成\u003C/h4>\n\u003Cp data-sourcepos=\"148:1-150:54\">テスト関数名が文章になっているのはポイント高いですね。\u003Cbr>\n実際にテスト結果も問題ありません。\u003Cbr>\n\u003Ccode>src/test/kotlin/com/example/blog/IntegrationTests.kt\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"151:1-173:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">IntegrationTests.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.blog\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.assertj.core.api.Assertions.assertThat\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.Test\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.beans.factory.annotation.Autowired\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.test.context.SpringBootTest\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.test.web.client.TestRestTemplate\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.test.web.client.getForEntity\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.http.HttpStatus\u003C/span>\n\n\u003Cspan class=\"nd\">@SpringBootTest\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">webEnvironment\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"nc\">SpringBootTest\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">WebEnvironment\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">RANDOM_PORT\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">IntegrationTests\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nd\">@Autowired\u003C/span> \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">restTemplate\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">TestRestTemplate\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@Test\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">`Assert\u003C/span> \u003Cspan class=\"n\">blog\u003C/span> \u003Cspan class=\"n\">page\u003C/span> \u003Cspan class=\"n\">title\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"n\">content\u003C/span> \u003Cspan class=\"n\">and\u003C/span> \u003Cspan class=\"n\">status\u003C/span> \u003Cspan class=\"nf\">code`\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">entity\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">restTemplate\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">getForEntity\u003C/span>\u003Cspan class=\"p\">&lt;\u003C/span>\u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">&gt;(\u003C/span>\u003Cspan class=\"s\">\"/\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"nf\">assertThat\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">entity\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">statusCode\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">isEqualTo\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">HttpStatus\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">OK\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"nf\">assertThat\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">entity\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">body\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">contains\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"&lt;h1&gt;Blog&lt;/h1&gt;\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Ch4 data-sourcepos=\"175:1-175:83\">\n\u003Cspan id=\"テストクラスごとにテスト開始前後で関数を実行する場合\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%94%E3%81%A8%E3%81%AB%E3%83%86%E3%82%B9%E3%83%88%E9%96%8B%E5%A7%8B%E5%89%8D%E5%BE%8C%E3%81%A7%E9%96%A2%E6%95%B0%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テストクラスごとにテスト開始前後で関数を実行する場合\u003C/h4>\n\u003Cp data-sourcepos=\"176:1-177:46\">プロパティファイルを設定します。\u003Cbr>\n\u003Ccode>src/test/resources/junit-platform.properties\u003C/code>\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"properties\" data-sourcepos=\"178:1-180:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">junit-platform.properties\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"py\">junit.jupiter.testinstance.lifecycle.default\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"s\">per_class\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"182:1-182:83\">テストクラスで\u003Ccode>@BeforeAll\u003C/code>、\u003Ccode>@AfterAll\u003C/code>が使えるようになります。\u003C/p>\n\u003Ch4 data-sourcepos=\"184:1-184:38\">\n\u003Cspan id=\"テストクラスに関数追加\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%AB%E9%96%A2%E6%95%B0%E8%BF%BD%E5%8A%A0\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>テストクラスに関数追加\u003C/h4>\n\u003Cp data-sourcepos=\"185:1-185:84\">\u003Ccode>src/test/kotlin/com/example/blog/IntegrationTests.kt\u003C/code>に関数を追加します。\u003C/p>\n\u003Cdiv class=\"code-frame\" data-lang=\"kotlin\" data-sourcepos=\"186:1-220:3\">\n\u003Cdiv class=\"code-lang\">\u003Cspan class=\"bold\">IntegrationTests.kt\u003C/span>\u003C/div>\n\u003Cdiv class=\"highlight\">\u003Cpre>\u003Ccode>\u003Cspan class=\"k\">package\u003C/span> \u003Cspan class=\"nn\">com.example.blog\u003C/span>\n\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.assertj.core.api.Assertions.assertThat\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.AfterAll\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.BeforeAll\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.junit.jupiter.api.Test\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.beans.factory.annotation.Autowired\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.test.context.SpringBootTest\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.test.web.client.TestRestTemplate\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.boot.test.web.client.getForEntity\u003C/span>\n\u003Cspan class=\"k\">import\u003C/span> \u003Cspan class=\"nn\">org.springframework.http.HttpStatus\u003C/span>\n\n\u003Cspan class=\"nd\">@SpringBootTest\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">webEnvironment\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"nc\">SpringBootTest\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">WebEnvironment\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">RANDOM_PORT\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n\u003Cspan class=\"kd\">class\u003C/span> \u003Cspan class=\"nc\">IntegrationTests\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nd\">@Autowired\u003C/span> \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">restTemplate\u003C/span>\u003Cspan class=\"p\">:\u003C/span> \u003Cspan class=\"nc\">TestRestTemplate\u003C/span>\u003Cspan class=\"p\">)\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n\n    \u003Cspan class=\"nd\">@BeforeAll\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">setup\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"nf\">println\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"&gt;&gt; Setup\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n    \u003Cspan class=\"nd\">@Test\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">`Assert\u003C/span> \u003Cspan class=\"n\">blog\u003C/span> \u003Cspan class=\"n\">page\u003C/span> \u003Cspan class=\"n\">title\u003C/span>\u003Cspan class=\"p\">,\u003C/span> \u003Cspan class=\"n\">content\u003C/span> \u003Cspan class=\"n\">and\u003C/span> \u003Cspan class=\"n\">status\u003C/span> \u003Cspan class=\"nf\">code`\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"kd\">val\u003C/span> \u003Cspan class=\"py\">entity\u003C/span> \u003Cspan class=\"p\">=\u003C/span> \u003Cspan class=\"n\">restTemplate\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">getForEntity\u003C/span>\u003Cspan class=\"p\">&lt;\u003C/span>\u003Cspan class=\"nc\">String\u003C/span>\u003Cspan class=\"p\">&gt;(\u003C/span>\u003Cspan class=\"s\">\"/\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"nf\">assertThat\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">entity\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">statusCode\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">isEqualTo\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"nc\">HttpStatus\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"nc\">OK\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n        \u003Cspan class=\"nf\">assertThat\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"n\">entity\u003C/span>\u003Cspan class=\"p\">.\u003C/span>\u003Cspan class=\"n\">body\u003C/span>\u003Cspan class=\"p\">).\u003C/span>\u003Cspan class=\"nf\">contains\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"&lt;h1&gt;Blog&lt;/h1&gt;\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n    \u003Cspan class=\"nd\">@AfterAll\u003C/span>\n    \u003Cspan class=\"k\">fun\u003C/span> \u003Cspan class=\"nf\">teardown\u003C/span>\u003Cspan class=\"p\">()\u003C/span> \u003Cspan class=\"p\">{\u003C/span>\n        \u003Cspan class=\"nf\">println\u003C/span>\u003Cspan class=\"p\">(\u003C/span>\u003Cspan class=\"s\">\"&gt;&gt; Tear down\"\u003C/span>\u003Cspan class=\"p\">)\u003C/span>\n    \u003Cspan class=\"p\">}\u003C/span>\n\n\u003Cspan class=\"p\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003C/div>\n\u003C/div>\n\u003Cp data-sourcepos=\"222:1-222:143\">コンソールに、テストクラスの開始時は\u003Ccode>&gt;&gt; Setup\u003C/code>、終了時は\u003Ccode>&gt;&gt; Tear down\u003C/code>という文字列が出力されていたらOK。\u003C/p>\n\u003Ch2 data-sourcepos=\"224:1-224:15\">\n\u003Cspan id=\"さいごに\" class=\"fragment\">\u003C/span>\u003Ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\">\u003Ci class=\"fa fa-link\">\u003C/i>\u003C/a>さいごに\u003C/h2>\n\u003Cp data-sourcepos=\"225:1-225:69\">長くなってきたのでここで一旦ここで終了します。\u003C/p>\n","# 前提\n仕事ではずっとJavaで、たまにJavaScriptやPythonを使用してきました。\n「Kotlinはいいぞ(？)」という話をよく聞くので、チュートリアルをやってみます。\nJavaのSpring Bootをよく利用しているので、理解しやすいと思い、Kotlinでも同じフレームワークを使用してみます。\n\nチュートリアルは以下のサイトにあるものを実施してみます。\n\nhttps://spring.pleiades.io/guides/tutorials/spring-boot-kotlin/\n\nコーディングルールがわからないときはこちらを参照。（間違っていたら指摘いただけると幸いです。）\n\nhttps://runebook.dev/ja/docs/kotlin/docs/reference/coding-conventions\n\n# 環境\n- macOS: 11.6.4\n- IntelliJ IDEA: 2021.2.3 (Community Edition)\n- Kotlin: 212-1.5.10-release-IJ5457.46\n- Gradle: 7.4.1\n- Java: temurin 17.0.3\n\n# 手順\n## 新しいプロジェクトを作成する\n「Initializr Web サイトを利用する方法」「コマンドラインを使用する方法」「IntelliJ IDEA の使用」が紹介されています。今回は一番最初を使用します。一番最後はIntelliのUltimateエディションを利用することが条件のようです。\n\n#### spring initializerにアクセス\nhttps://start.spring.io/\n\n#### 以下のパラメータを設定\n- Project: `Gradle Project`\n- Language: `Kotlin`\n- Spring Boot: `2.7.0`\n- Project Metadata\n    - Group: `com.example`\n    - Artifact/Name: `blog`\n    - Package name: `com.example.blog`\n    - Packaging: `Jar`\n    - Java: `17`\n- Dependencies:\n    - `Spring Web`\n    - `Mustache`\n    - `Spring Data JPA`\n    - `H2 Database`\n    - `Spring Boot DevTools`\n#### 生成ボタン(Generate)をクリック\nblog.zipがダウンロードされます。\n\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/15d748d3-047a-50c7-98e2-a2a363479586.png\">\n\n#### ダウンロードしたプロジェクトを展開する\n```\nkotlin % unzip blog.zip \nArchive:  blog.zip\n   creating: blog/\n  inflating: blog/gradlew            \n   creating: blog/src/\n   creating: blog/src/test/\n   creating: blog/src/test/kotlin/\n   creating: blog/src/test/kotlin/com/\n   creating: blog/src/test/kotlin/com/example/\n   creating: blog/src/test/kotlin/com/example/blog/\n  inflating: blog/src/test/kotlin/com/example/blog/BlogApplicationTests.kt  \n   creating: blog/src/main/\n   creating: blog/src/main/kotlin/\n   creating: blog/src/main/kotlin/com/\n   creating: blog/src/main/kotlin/com/example/\n   creating: blog/src/main/kotlin/com/example/blog/\n  inflating: blog/src/main/kotlin/com/example/blog/BlogApplication.kt  \n   creating: blog/src/main/resources/\n   creating: blog/src/main/resources/templates/\n   creating: blog/src/main/resources/static/\n  inflating: blog/src/main/resources/application.properties  \n  inflating: blog/build.gradle.kts   \n   creating: blog/gradle/\n   creating: blog/gradle/wrapper/\n  inflating: blog/gradle/wrapper/gradle-wrapper.jar  \n  inflating: blog/gradle/wrapper/gradle-wrapper.properties  \n  inflating: blog/HELP.md            \n  inflating: blog/.gitignore         \n  inflating: blog/settings.gradle.kts  \n  inflating: blog/gradlew.bat        \nkotlin %\n```\n\n#### 展開したプロジェクトをIntelliJで開く\n\u003Cimg width=\"560\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/9da2ce91-6ee2-28d9-6b5d-3a9ffd75e057.png\">\n\n## コントローラーの作成\n`src/main/kotlin/com/example/blog/HtmlController.kt`\n```kotlin:HtmlController.kt\npackage com.example.blog\n\nimport org.springframework.stereotype.Controller\nimport org.springframework.ui.Model\nimport org.springframework.ui.set\nimport org.springframework.web.bind.annotation.GetMapping\n\n@Controller\nclass HtmlController {\n\n  @GetMapping(\"/\")\n  fun blog(model: Model): String {\n    model[\"title\"] = \"Blog\"\n    return \"blog\"\n  }\n\n}\n```\n\u003Cimg width=\"300\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/133448fe-d0cb-03d2-a35b-be261411703e.png\">\n\n## Mustacheテンプレートを作成\n`src/main/resources/templates/header.mustache`\n```header.mustache\n\u003Chtml>\n\u003Chead>\n  \u003Ctitle>{{title}}\u003C/title>\n\u003C/head>\n\u003Cbody>\n```\n`src/main/resources/templates/footer.mustache`\n```footer.mustache\n\u003C/body>\n\u003C/html>\n```\n`src/main/resources/templates/blog.mustache`\n```blog.mustache\n{{> header}}\n\u003Ch1>{{title}}\u003C/h1>\n{{> footer}}\n```\n\u003Cimg width=\"300\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/37708048-59fd-8a7c-4836-b3744b3a20e3.png\">\n\n## アプリケーションの起動\n#### `BlogApplication.kt`を選択して`Run BlogApplicationKt`を実行\nしかしここでエラーが…。\n```\njava.lang.UnsupportedClassVersionError: com/example/blog/BlogApplicationKt has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 60.0\n```\n「このversionのJava Runtimeは60.0versionのclass fileしか認識できないけど、`com/example/blog/BlogApplicationKt`は61.0だ」と怒られているようです。\n\n私のIntelliJ IDEAのJREがDefaultでJava16だったので、17に変更したら問題なく起動できました。\n\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/3565c46b-5eb6-59f9-3d4f-abdf82fb8054.png\">\n\nhttp://localhost:8080/\nにアクセスすると、Blogと表示されています。\n\u003Cimg width=\"500\" alt=\"\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2433961/4f26386a-1127-4b9f-6a70-9cdc4ab8fad8.png\">\n\n## JUnit5を使用したテスト\n#### テストの作成\nテスト関数名が文章になっているのはポイント高いですね。\n実際にテスト結果も問題ありません。\n`src/test/kotlin/com/example/blog/IntegrationTests.kt`\n```kotlin:IntegrationTests.kt\npackage com.example.blog\n\nimport org.assertj.core.api.Assertions.assertThat\nimport org.junit.jupiter.api.Test\nimport org.springframework.beans.factory.annotation.Autowired\nimport org.springframework.boot.test.context.SpringBootTest\nimport org.springframework.boot.test.web.client.TestRestTemplate\nimport org.springframework.boot.test.web.client.getForEntity\nimport org.springframework.http.HttpStatus\n\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\nclass IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {\n\n    @Test\n    fun `Assert blog page title, content and status code`() {\n        val entity = restTemplate.getForEntity\u003CString>(\"/\")\n        assertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n        assertThat(entity.body).contains(\"\u003Ch1>Blog\u003C/h1>\")\n    }\n\n}\n```\n\n#### テストクラスごとにテスト開始前後で関数を実行する場合\nプロパティファイルを設定します。\n`src/test/resources/junit-platform.properties`\n```properties:junit-platform.properties\njunit.jupiter.testinstance.lifecycle.default = per_class\n```\n\nテストクラスで`@BeforeAll`、`@AfterAll`が使えるようになります。\n\n#### テストクラスに関数追加\n`src/test/kotlin/com/example/blog/IntegrationTests.kt`に関数を追加します。\n```kotlin:IntegrationTests.kt\npackage com.example.blog\n\nimport org.assertj.core.api.Assertions.assertThat\nimport org.junit.jupiter.api.AfterAll\nimport org.junit.jupiter.api.BeforeAll\nimport org.junit.jupiter.api.Test\nimport org.springframework.beans.factory.annotation.Autowired\nimport org.springframework.boot.test.context.SpringBootTest\nimport org.springframework.boot.test.web.client.TestRestTemplate\nimport org.springframework.boot.test.web.client.getForEntity\nimport org.springframework.http.HttpStatus\n\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\nclass IntegrationTests(@Autowired val restTemplate: TestRestTemplate) {\n\n    @BeforeAll\n    fun setup() {\n        println(\">> Setup\")\n    }\n\n    @Test\n    fun `Assert blog page title, content and status code`() {\n        val entity = restTemplate.getForEntity\u003CString>(\"/\")\n        assertThat(entity.statusCode).isEqualTo(HttpStatus.OK)\n        assertThat(entity.body).contains(\"\u003Ch1>Blog\u003C/h1>\")\n    }\n\n    @AfterAll\n    fun teardown() {\n        println(\">> Tear down\")\n    }\n\n}\n```\n\nコンソールに、テストクラスの開始時は`>> Setup`、終了時は`>> Tear down`という文字列が出力されていたらOK。\n\n## さいごに\n長くなってきたのでここで一旦ここで終了します。\n",false,0,"2022-06-17T01:50:18+09:00",null,"17a3198a2eb553844634",1,[13,16],{"name":14,"versions":15},"Kotlin",[],{"name":17,"versions":18},"SpringBoot",[],"KotlinでSpring BootのWebアプリケーションを作成してみる（１）","2022-06-19T21:22:22+09:00","https://qiita.com/y5347M/items/17a3198a2eb553844634",{"description":23,"facebook_id":24,"followees_count":25,"followers_count":11,"github_login_name":26,"id":26,"items_count":27,"linkedin_id":24,"location":24,"name":26,"organization":24,"permanent_id":28,"profile_image_url":29,"team_only":6,"twitter_screen_name":30,"website_url":31},"バックエンドエンジニアをしています。","",5,"y5347M",18,2433961,"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/2433961/a4773675e7566e225738c8c15f9fda53e35bd799/large.png?1741427719","mmmm16089306","https://twitter.com/mmmm16089306",1841,{"description":23,"facebook_id":24,"followees_count":25,"followers_count":11,"github_login_name":26,"id":26,"items_count":27,"linkedin_id":24,"location":24,"name":26,"organization":24,"permanent_id":28,"profile_image_url":29,"team_only":6,"twitter_screen_name":30,"website_url":31,"image_monthly_upload_limit":34,"image_monthly_upload_remaining":35},104857600,101432560,1745893162955]